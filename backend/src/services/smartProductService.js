/**
 * ุฎุฏูุฉ ุงูููุชุฌุงุช ุงูุฐููุฉ
 * ุชุฏูุฑ ุนุฑุถ ุงูููุชุฌุงุช ุจุดูู ุทุจูุนู ูุฐูู ุญุณุจ ุงูุณูุงู
 */

const { PrismaClient } = require('@prisma/client');

class SmartProductService {
  constructor() {
    this.prisma = new PrismaClient();
  }

  /**
   * ุงูุญุตูู ุนูู ุงูููุชุฌุงุช ุจุดูู ุฐูู ุญุณุจ ุงูุณูุงู
   */
  async getContextualProducts(companyId, message, intentAnalysis) {
    try {
      const { type, needsProducts } = intentAnalysis;
      
      if (!needsProducts) {
        return {
          success: true,
          products: [],
          shouldDisplay: false,
          reason: 'ูุง ูุญุชุงุฌ ููุชุฌุงุช ูู ูุฐุง ุงูุณูุงู'
        };
      }

      // ุฌูุจ ุงูููุชุฌุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
      const products = await this.prisma.product.findMany({
        where: { 
          companyId,
          isActive: true 
        },
        include: {
          category: true
        },
        orderBy: {
          createdAt: 'desc'
        },
        take: 3 // ุนุฏุฏ ูุญุฏูุฏ ูู ุงูููุชุฌุงุช
      });

      if (products.length === 0) {
        return {
          success: false,
          products: [],
          shouldDisplay: false,
          reason: 'ูุง ุชูุฌุฏ ููุชุฌุงุช ูุชุงุญุฉ'
        };
      }

      // ุชุตููุฉ ุงูููุชุฌุงุช ุญุณุจ ุงูุฑุณุงูุฉ
      const filteredProducts = this.filterProductsByMessage(products, message);
      
      // ุชูุณูู ุงูููุชุฌุงุช ููุนุฑุถ
      const formattedProducts = this.formatProductsForDisplay(filteredProducts, type);

      return {
        success: true,
        products: formattedProducts,
        shouldDisplay: true,
        displayStyle: this.getDisplayStyle(type),
        reason: 'ููุชุฌุงุช ููุงุณุจุฉ ููุณูุงู'
      };

    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุฌูุจ ุงูููุชุฌุงุช ุงูุฐููุฉ:', error);
      return {
        success: false,
        products: [],
        shouldDisplay: false,
        reason: 'ุฎุทุฃ ูู ุงููุธุงู'
      };
    }
  }

  /**
   * ุชุตููุฉ ุงูููุชุฌุงุช ุญุณุจ ุงูุฑุณุงูุฉ
   */
  filterProductsByMessage(products, message) {
    const text = message.toLowerCase();
    
    // ุงูุจุญุซ ุนู ูููุงุช ููุชุงุญูุฉ
    const keywords = {
      shoes: ['ููุชุดู', 'ุญุฐุงุก', 'ุฃุญุฐูุฉ', 'ุฌุฒูุฉ'],
      clothes: ['ููุงุจุณ', 'ูููุต', 'ุจูุทููู', 'ูุณุชุงู'],
      accessories: ['ุงูุณุณูุงุฑ', 'ุณุงุนุฉ', 'ุญููุจุฉ', 'ูุญูุธุฉ']
    };

    // ุฅุฐุง ุฐูุฑ ููุน ูุนูู ูู ุงูููุชุฌุงุช
    for (const [category, words] of Object.entries(keywords)) {
      if (words.some(word => text.includes(word))) {
        const filtered = products.filter(product => 
          product.name.toLowerCase().includes(words[0]) ||
          product.description?.toLowerCase().includes(words[0]) ||
          product.category?.name.toLowerCase().includes(category)
        );
        if (filtered.length > 0) return filtered;
      }
    }

    // ุฅุฐุง ูู ูุฐูุฑ ููุน ูุนููุ ุฃุฑุฌุน ูู ุงูููุชุฌุงุช
    return products;
  }

  /**
   * ุชูุณูู ุงูููุชุฌุงุช ููุนุฑุถ
   */
  formatProductsForDisplay(products, messageType) {
    return products.map(product => ({
      id: product.id,
      name: product.name,
      price: product.price,
      currency: product.currency || 'EGP',
      description: product.description,
      image: product.image,
      category: product.category?.name,
      displayText: this.generateProductDisplayText(product, messageType)
    }));
  }

  /**
   * ุชูููุฏ ูุต ุนุฑุถ ุงูููุชุฌ
   */
  generateProductDisplayText(product, messageType) {
    const price = `${product.price} ${product.currency || 'EGP'}`;
    
    switch (messageType) {
      case 'product_request':
        return `${product.name} - ${price}`;
      
      case 'product_inquiry':
        return `${product.name}\nุงูุณุนุฑ: ${price}\n${product.description || ''}`;
      
      case 'service_inquiry':
        return `${product.name} - ${price} (+ 50 ุฌููู ุดุญู)`;
      
      default:
        return `${product.name} - ${price}`;
    }
  }

  /**
   * ุชุญุฏูุฏ ุฃุณููุจ ุงูุนุฑุถ
   */
  getDisplayStyle(messageType) {
    switch (messageType) {
      case 'product_request':
        return 'grid'; // ุนุฑุถ ุดุจูู
      
      case 'product_inquiry':
        return 'detailed'; // ุนุฑุถ ููุตู
      
      case 'service_inquiry':
        return 'simple'; // ุนุฑุถ ุจุณูุท
      
      default:
        return 'grid';
    }
  }

  /**
   * ุชูููุฏ ุฑุณุงูุฉ ุนุฑุถ ุงูููุชุฌุงุช
   */
  generateProductMessage(products, displayStyle, baseResponse) {
    if (!products || products.length === 0) {
      return baseResponse;
    }

    let productMessage = baseResponse + '\n\n';

    switch (displayStyle) {
      case 'detailed':
        productMessage += this.generateDetailedProductList(products);
        break;
      
      case 'simple':
        productMessage += this.generateSimpleProductList(products);
        break;
      
      case 'grid':
      default:
        productMessage += this.generateGridProductList(products);
        break;
    }

    // ุฅุถุงูุฉ ุณุคุงู ุชูุงุนูู
    productMessage += '\n\n' + this.generateInteractiveQuestion(products.length);

    return productMessage;
  }

  /**
   * ุนุฑุถ ููุตู ููููุชุฌุงุช
   */
  generateDetailedProductList(products) {
    return products.map((product, index) => 
      `${index + 1}. **${product.name}**\n` +
      `   ๐ฐ ุงูุณุนุฑ: ${product.price} ${product.currency}\n` +
      `   ๐ ${product.description || 'ููุชุฌ ุนุงูู ุงูุฌูุฏุฉ'}\n` +
      `   ๐ ุฑูู ุงูููุชุฌ: ${product.id}`
    ).join('\n\n');
  }

  /**
   * ุนุฑุถ ุจุณูุท ููููุชุฌุงุช
   */
  generateSimpleProductList(products) {
    return products.map((product, index) => 
      `${index + 1}. ${product.name} - ${product.price} ${product.currency}`
    ).join('\n');
  }

  /**
   * ุนุฑุถ ุดุจูู ููููุชุฌุงุช
   */
  generateGridProductList(products) {
    let message = '๐๏ธ **ุงูููุชุฌุงุช ุงููุชุงุญุฉ:**\n\n';
    
    message += products.map((product, index) => 
      `${index + 1}. **${product.name}**\n` +
      `   ๐ฐ ${product.price} ${product.currency}\n` +
      `   ๐ ${product.id}`
    ).join('\n\n');

    return message;
  }

  /**
   * ุชูููุฏ ุณุคุงู ุชูุงุนูู
   */
  generateInteractiveQuestion(productCount) {
    if (productCount === 1) {
      return 'ุงูู ุฑุฃูู ูู ุงูููุชุฌ ุฏูุ ุนุฌุจู ููุง ุชุดูู ุญุงุฌุฉ ุชุงููุฉุ ๐';
    } else if (productCount === 2) {
      return 'ุฃู ูุงุญุฏ ูููู ุนุฌุจูุ ููุง ุนุงูุฒ ุชุดูู ุชูุงุตูู ุฃูุชุฑุ ๐ค';
    } else {
      return 'ุฃู ููุชุฌ ูููู ููุช ูุธุฑูุ ุนุงูุฒ ุชุนุฑู ุชูุงุตูู ุฃูุชุฑ ุนู ุฃู ูุงุญุฏุ โจ';
    }
  }

  /**
   * ุฅุถุงูุฉ ุตูุฑ ุงูููุชุฌุงุช
   */
  async getProductImages(products) {
    const images = [];
    
    for (const product of products) {
      if (product.image) {
        images.push({
          productId: product.id,
          productName: product.name,
          imageUrl: product.image,
          caption: `${product.name} - ${product.price} ${product.currency}`
        });
      }
    }

    return images;
  }

  /**
   * ุชุชุจุน ุชูุงุนู ุงูุนููู ูุน ุงูููุชุฌุงุช
   */
  async trackProductInteraction(companyId, customerId, productId, interactionType) {
    try {
      // ุญูุธ ุงูุชูุงุนู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ููุชุญููู ูุงุญูุงู
      console.log(`๐ ุชูุงุนู ุงูุนููู: ${customerId} ูุน ุงูููุชุฌ: ${productId} - ${interactionType}`);
      
      // ูููู ุฅุถุงูุฉ ุฌุฏูู ููุชูุงุนูุงุช ูุงุญูุงู
      return true;
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุชุชุจุน ุงูุชูุงุนู:', error);
      return false;
    }
  }

  /**
   * ุฅุบูุงู ุงูุงุชุตุงู
   */
  async disconnect() {
    await this.prisma.$disconnect();
  }
}

module.exports = SmartProductService;
