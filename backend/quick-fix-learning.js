/**
 * ุฅุตูุงุญ ุณุฑูุน ููุธุงู ุงูุชุนูู ุงููุณุชูุฑ
 */

const { PrismaClient } = require('@prisma/client');

async function quickFixLearning() {
  console.log('๐ง ุฅุตูุงุญ ุณุฑูุน ููุธุงู ุงูุชุนูู ุงููุณุชูุฑ...\n');

  const prisma = new PrismaClient();

  try {
    // 1. ุฅูุดุงุก ุจูุงูุงุช ุชุฌุฑูุจูุฉ ุณุฑูุนุฉ
    console.log('๐ ุฅูุดุงุก ุจูุงูุงุช ุชุฌุฑูุจูุฉ...');
    
    const companyId = 'cmdkj6coz0000uf0cyscco6lr';

    // ุญุฐู ุงูุจูุงูุงุช ุงููุฏููุฉ
    await prisma.learningData.deleteMany({
      where: { companyId }
    });

    await prisma.discoveredPattern.deleteMany({
      where: { companyId }
    });

    await prisma.appliedImprovement.deleteMany({
      where: { companyId }
    });

    // ุฅูุดุงุก ุจูุงูุงุช ุชุนูู ุชุฌุฑูุจูุฉ
    const learningData = [
      {
        companyId,
        customerId: 'customer_1',
        conversationId: 'conv_1',
        type: 'conversation',
        data: JSON.stringify({
          userMessage: 'ูุฑุญุจุงุ ุฃุฑูุฏ ูุนุฑูุฉ ุงูููุชุฌุงุช',
          aiResponse: 'ุฃููุงู ุจู! ูุฏููุง ูุฌููุนุฉ ุฑุงุฆุนุฉ ูู ุงูููุชุฌุงุช',
          intent: 'product_inquiry',
          sentiment: 'positive',
          processingTime: 1200,
          ragDataUsed: true,
          memoryUsed: false,
          model: 'gemini-pro',
          confidence: 0.9
        }),
        outcome: 'satisfied',
        feedback: JSON.stringify({
          satisfactionScore: 5,
          responseQuality: 'excellent'
        })
      },
      {
        companyId,
        customerId: 'customer_2',
        conversationId: 'conv_2',
        type: 'conversation',
        data: JSON.stringify({
          userMessage: 'ุฃุฑูุฏ ุฃุดุชุฑู ุชูุดูุฑุช',
          aiResponse: 'ููุชุงุฒ! ุฅููู ุฃูุถู ุงูุชูุดูุฑุชุงุช ุงููุชุงุญุฉ',
          intent: 'purchase',
          sentiment: 'positive',
          processingTime: 1500,
          ragDataUsed: true,
          memoryUsed: true,
          model: 'gemini-pro',
          confidence: 0.95
        }),
        outcome: 'purchase_intent',
        feedback: null
      },
      {
        companyId,
        customerId: 'customer_3',
        conversationId: 'conv_3',
        type: 'conversation',
        data: JSON.stringify({
          userMessage: 'ุนูุฏู ูุดููุฉ ูู ุงูุทูุจ',
          aiResponse: 'ุฃุนุชุฐุฑ ุนู ุงููุดููุฉุ ุฏุนูู ุฃุณุงุนุฏู',
          intent: 'support',
          sentiment: 'negative',
          processingTime: 2000,
          ragDataUsed: true,
          memoryUsed: true,
          model: 'gemini-pro',
          confidence: 0.85
        }),
        outcome: 'resolved',
        feedback: JSON.stringify({
          satisfactionScore: 4,
          responseQuality: 'good'
        })
      },
      {
        companyId,
        customerId: 'customer_4',
        conversationId: 'conv_4',
        type: 'conversation',
        data: JSON.stringify({
          userMessage: 'ุดูุฑุงูุ ุงูุฎุฏูุฉ ููุชุงุฒุฉ',
          aiResponse: 'ุดูุฑุงู ูู! ูุณุนุฏูุง ุฎุฏูุชู',
          intent: 'feedback',
          sentiment: 'positive',
          processingTime: 800,
          ragDataUsed: false,
          memoryUsed: true,
          model: 'gemini-pro',
          confidence: 0.98
        }),
        outcome: 'satisfied',
        feedback: JSON.stringify({
          satisfactionScore: 5,
          responseQuality: 'excellent'
        })
      },
      {
        companyId,
        customerId: 'customer_5',
        conversationId: 'conv_5',
        type: 'conversation',
        data: JSON.stringify({
          userMessage: 'ูุง ูู ุฃุณุนุงุฑ ุงูุดุญูุ',
          aiResponse: 'ุงูุดุญู ูุฌุงูู ููุทูุจุงุช ููู 200 ุฌููู',
          intent: 'inquiry',
          sentiment: 'neutral',
          processingTime: 1100,
          ragDataUsed: true,
          memoryUsed: false,
          model: 'gemini-pro',
          confidence: 0.92
        }),
        outcome: 'satisfied',
        feedback: JSON.stringify({
          satisfactionScore: 4,
          responseQuality: 'good'
        })
      }
    ];

    for (const data of learningData) {
      await prisma.learningData.create({ data });
    }

    console.log(`โ ุชู ุฅูุดุงุก ${learningData.length} ุณุฌู ุชุนูู`);

    // 2. ุฅูุดุงุก ุฃููุงุท ููุชุดูุฉ
    console.log('๐ ุฅูุดุงุก ุฃููุงุท ููุชุดูุฉ...');

    const patterns = [
      {
        companyId,
        patternType: 'customer_behavior',
        pattern: 'positive_greeting_response',
        description: 'ุงูุนููุงุก ูุณุชุฌูุจูู ุฅูุฌุงุจูุงู ููุชุฑุญูุจ ุงููุฏูุฏ',
        confidence: 0.85,
        occurrences: 3,
        contexts: JSON.stringify({
          greetingStyle: 'friendly',
          responseTime: 'fast',
          satisfaction: 'high'
        }),
        actionableInsights: JSON.stringify([
          'ุงุณุชุฎุฏุงู ุชุฑุญูุจ ูุฏูุฏ ูุฒูุฏ ุงูุฑุถุง',
          'ุงูุงุณุชุฌุงุจุฉ ุงูุณุฑูุนุฉ ูููุฉ'
        ]),
        impact: JSON.stringify({
          satisfactionIncrease: '15%',
          engagementIncrease: '20%'
        }),
        status: 'active'
      },
      {
        companyId,
        patternType: 'performance',
        pattern: 'fast_response_high_satisfaction',
        description: 'ุงูุงุณุชุฌุงุจุฉ ุงูุณุฑูุนุฉ ุชุคุฏู ูุฑุถุง ุฃุนูู',
        confidence: 0.92,
        occurrences: 4,
        contexts: JSON.stringify({
          avgResponseTime: 1200,
          satisfactionScore: 4.5
        }),
        actionableInsights: JSON.stringify([
          'ุชุญุณูู ุฃููุงุช ุงูุงุณุชุฌุงุจุฉ',
          'ุงุณุชุฎุฏุงู ุฑุฏูุฏ ุฌุงูุฒุฉ ููุงุณุชูุณุงุฑุงุช ุงูุดุงุฆุนุฉ'
        ]),
        impact: JSON.stringify({
          responseTimeImprovement: '25%',
          satisfactionIncrease: '18%'
        }),
        status: 'active'
      }
    ];

    for (const pattern of patterns) {
      await prisma.discoveredPattern.create({ data: pattern });
    }

    console.log(`โ ุชู ุฅูุดุงุก ${patterns.length} ููุท ููุชุดู`);

    // 3. ุฅูุดุงุก ุชุญุณููุงุช ูุทุจูุฉ
    console.log('๐ง ุฅูุดุงุก ุชุญุณููุงุช ูุทุจูุฉ...');

    const improvements = [
      {
        companyId,
        type: 'prompt_optimization',
        description: 'ุชุญุณูู ุงูุจุฑููุจุช ูุชุถููู ุชุฑุญูุจ ุฃูุซุฑ ูุฏูุฉ',
        implementation: JSON.stringify({
          type: 'prompt_update',
          changes: ['ุฅุถุงูุฉ ุชุฑุญูุจ ูุฏูุฏ', 'ุงุณุชุฎุฏุงู ูุบุฉ ุฃูุซุฑ ุฏูุฆุงู'],
          strategy: 'emphasize_friendly_greeting'
        }),
        rolloutPercentage: 100,
        status: 'active',
        beforeMetrics: JSON.stringify({
          satisfactionScore: 4.0,
          responseTime: 1500
        }),
        afterMetrics: JSON.stringify({
          satisfactionScore: 4.3,
          responseTime: 1200
        }),
        appliedAt: new Date()
      }
    ];

    for (const improvement of improvements) {
      await prisma.appliedImprovement.create({ data: improvement });
    }

    console.log(`โ ุชู ุฅูุดุงุก ${improvements.length} ุชุญุณูู ูุทุจู`);

    // 4. ุฅูุดุงุก ุฅุนุฏุงุฏุงุช ุงูุชุนูู
    console.log('โ๏ธ ุฅูุดุงุก ุฅุนุฏุงุฏุงุช ุงูุชุนูู...');

    const existingSettings = await prisma.learningSettings.findUnique({
      where: { companyId }
    });

    if (!existingSettings) {
      await prisma.learningSettings.create({
        data: {
          companyId,
          enabled: true,
          learningSpeed: 'medium',
          autoApplyImprovements: false,
          dataRetentionDays: 90,
          minimumSampleSize: 5,
          confidenceThreshold: 0.7,
          settings: JSON.stringify({
            collectConversations: true,
            collectSentiment: true,
            collectPerformance: true,
            enablePatternAnalysis: true,
            enableImprovementSuggestions: true
          })
        }
      });
      console.log('โ ุชู ุฅูุดุงุก ุฅุนุฏุงุฏุงุช ุงูุชุนูู');
    } else {
      console.log('โ ุฅุนุฏุงุฏุงุช ุงูุชุนูู ููุฌูุฏุฉ ูุณุจูุงู');
    }

    // 5. ุนุฑุถ ุงูุฅุญุตุงุฆูุงุช ุงูููุงุฆูุฉ
    console.log('\n๐ ุงูุฅุญุตุงุฆูุงุช ุงูููุงุฆูุฉ:');

    const totalLearningData = await prisma.learningData.count({ where: { companyId } });
    const totalPatterns = await prisma.discoveredPattern.count({ where: { companyId } });
    const totalImprovements = await prisma.appliedImprovement.count({ where: { companyId } });

    console.log(`๐ ุฅุฌูุงูู ุจูุงูุงุช ุงูุชุนูู: ${totalLearningData}`);
    console.log(`๐ ุฅุฌูุงูู ุงูุฃููุงุท ุงูููุชุดูุฉ: ${totalPatterns}`);
    console.log(`๐ง ุฅุฌูุงูู ุงูุชุญุณููุงุช ุงููุทุจูุฉ: ${totalImprovements}`);

    // ุญุณุงุจ ูุนุฏู ุงููุฌุงุญ
    const successfulInteractions = await prisma.learningData.count({
      where: {
        companyId,
        outcome: { in: ['satisfied', 'resolved', 'purchase_intent'] }
      }
    });

    const successRate = totalLearningData > 0 
      ? Math.round((successfulInteractions / totalLearningData) * 100) 
      : 0;

    console.log(`๐ ูุนุฏู ุงููุฌุงุญ: ${successRate}%`);

    console.log('\n๐ ุชู ุฅุตูุงุญ ูุธุงู ุงูุชุนูู ุงููุณุชูุฑ ุจูุฌุงุญ!');
    console.log('\n๐ก ุงูุขู ููููู:');
    console.log('1. ุชุญุฏูุซ ุตูุญุฉ ูุธุงู ุงูุชุนูู ุงููุณุชูุฑ');
    console.log('2. ุณุชุฌุฏ ุงูุจูุงูุงุช ุชุธูุฑ ูู ููุญุฉ ุงูุชุญูู');
    console.log('3. ุงููุธุงู ุณูุฌูุน ุจูุงูุงุช ุฌุฏูุฏุฉ ูู ุงูุฑุณุงุฆู ุงููุงุฏูุฉ');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุฅุตูุงุญ:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// ุชุดุบูู ุงูุฅุตูุงุญ
if (require.main === module) {
  quickFixLearning().catch(console.error);
}

module.exports = quickFixLearning;
