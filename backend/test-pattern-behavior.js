#!/usr/bin/env node

/**
 * ุงุฎุชุจุงุฑ ุณููู ุงูุฃููุงุท ุนูุฏ ุฅููุงู/ุชูุนูู ุงููุธุงู
 */

const { PrismaClient } = require('@prisma/client');
const PatternApplicationService = require('./src/services/patternApplicationService');

const prisma = new PrismaClient();

async function testPatternBehavior() {
  try {
    console.log('๐งช ุงุฎุชุจุงุฑ ุณููู ุงูุฃููุงุท ุนูุฏ ุฅููุงู ุงููุธุงู...\n');
    
    const halawCompanyId = 'cme8zve740006ufbcre9qzue4';
    
    // 1. ูุญุต ุญุงูุฉ ุงููุธุงู
    console.log('1๏ธโฃ ูุญุต ุญุงูุฉ ุงููุธุงู ูุดุฑูุฉ ุงูุญูู:');
    const company = await prisma.company.findUnique({
      where: { id: halawCompanyId },
      select: { settings: true, name: true }
    });
    
    let systemSettings = {};
    try {
      systemSettings = company.settings ? JSON.parse(company.settings) : {};
    } catch (e) {
      systemSettings = {};
    }
    
    const isSystemEnabled = systemSettings.patternSystemEnabled !== false;
    console.log(`   ๐ข ุงูุดุฑูุฉ: ${company.name}`);
    console.log(`   ๐ฏ ุญุงูุฉ ุงููุธุงู: ${isSystemEnabled ? '๐ข ููุนู' : '๐ด ูุนุทู'}`);
    
    // 2. ูุญุต ุงูุฃููุงุท ุงูููุฌูุฏุฉ
    console.log('\n2๏ธโฃ ูุญุต ุงูุฃููุงุท ุงูููุฌูุฏุฉ:');
    const allPatterns = await prisma.successPattern.findMany({
      where: { companyId: halawCompanyId },
      select: {
        id: true,
        description: true,
        isActive: true,
        isApproved: true,
        successRate: true
      }
    });
    
    console.log(`   ๐ ุฅุฌูุงูู ุงูุฃููุงุท: ${allPatterns.length}`);
    console.log(`   โ ุงูุฃููุงุท ุงููุดุทุฉ: ${allPatterns.filter(p => p.isActive).length}`);
    console.log(`   ๐ฏ ุงูุฃููุงุท ุงููุนุชูุฏุฉ: ${allPatterns.filter(p => p.isApproved).length}`);
    console.log(`   ๐ ุงูุฃููุงุท ุงููุดุทุฉ ูุงููุนุชูุฏุฉ: ${allPatterns.filter(p => p.isActive && p.isApproved).length}`);
    
    // 3. ูุญุงููุฉ ุชูุนูู ููุท ูุงุญุฏ ูุฏููุงู
    if (allPatterns.length > 0) {
      console.log('\n3๏ธโฃ ูุญุงููุฉ ุชูุนูู ููุท ูุงุญุฏ ูุฏููุงู:');
      const firstPattern = allPatterns[0];
      console.log(`   ๐ฏ ุงูููุท ุงููุฎุชุงุฑ: ${firstPattern.description.substring(0, 50)}...`);
      console.log(`   ๐ ุงูุญุงูุฉ ุงูุญุงููุฉ: ูุดุท=${firstPattern.isActive}, ูุนุชูุฏ=${firstPattern.isApproved}`);
      
      // ุชูุนูู ุงูููุท
      const updatedPattern = await prisma.successPattern.update({
        where: { id: firstPattern.id },
        data: { 
          isActive: true,
          isApproved: true
        }
      });
      
      console.log(`   โ ุชู ุชูุนูู ุงูููุท ุจูุฌุงุญ!`);
      console.log(`   ๐ ุงูุญุงูุฉ ุงูุฌุฏูุฏุฉ: ูุดุท=${updatedPattern.isActive}, ูุนุชูุฏ=${updatedPattern.isApproved}`);
      
      // 4. ุงุฎุชุจุงุฑ ูุง ุฅุฐุง ูุงู ุณูุชู ุชุทุจููู
      console.log('\n4๏ธโฃ ุงุฎุชุจุงุฑ ุชุทุจูู ุงูููุท:');
      
      const patternService = new PatternApplicationService();
      
      const approvedPatterns = await patternService.getApprovedPatterns(halawCompanyId);
      console.log(`   ๐ ุงูุฃููุงุท ุงูุชู ุณูุชู ุชุทุจูููุง: ${approvedPatterns.length}`);
      
      if (approvedPatterns.length === 0) {
        console.log('   ๐ด ูู ูุชู ุชุทุจูู ุฃู ุฃููุงุท ูุฃู ุงููุธุงู ูุนุทู');
      } else {
        console.log('   ๐ข ุณูุชู ุชุทุจูู ุงูุฃููุงุท ูุฃู ุงููุธุงู ููุนู');
        approvedPatterns.forEach((pattern, index) => {
          console.log(`      ${index + 1}. ${pattern.description.substring(0, 60)}...`);
        });
      }
      
      // 5. ุงุฎุชุจุงุฑ ุชุทุจูู ูุนูู
      console.log('\n5๏ธโฃ ุงุฎุชุจุงุฑ ุชุทุจูู ูุนูู ุนูู ูุต:');
      const testText = 'ูุฑุญุจุงุ ุฃุฑูุฏ ูุนุฑูุฉ ุฃุณุนุงุฑ ุงูููุชุฌุงุช';
      console.log(`   ๐ ุงููุต ุงูุฃุตูู: "${testText}"`);
      
      const enhancedText = await patternService.applyAllPatterns(
        testText,
        halawCompanyId,
        'test-conversation-123'
      );
      
      console.log(`   ๐ ุงููุต ุงููุญุณู: "${enhancedText}"`);
      
      if (enhancedText === testText) {
        console.log('   ๐ ุงููุชูุฌุฉ: ูู ูุชู ุชุทุจูู ุฃู ุชุญุณููุงุช');
      } else {
        console.log('   ๐ ุงููุชูุฌุฉ: ุชู ุชุทุจูู ุชุญุณููุงุช ุจูุฌุงุญ');
      }
    }
    
    console.log('\n๐ฏ ุงูุฎูุงุตุฉ:');
    console.log('   - ุฅุฐุง ูุงู ุงููุธุงู ูุนุทู: ูู ูุชู ุชุทุจูู ุฃู ุฃููุงุท ุญุชู ูู ูุงูุช ููุนูุฉ');
    console.log('   - ุฅุฐุง ูุงู ุงููุธุงู ููุนู: ุณูุชู ุชุทุจูู ุงูุฃููุงุท ุงูููุนูุฉ ูุงููุนุชูุฏุฉ');
    console.log('   - ุชูุนูู ููุท ูุงุญุฏ ูุง ููุนู ุงููุธุงู ุจุงููุงูู');
    
    await prisma.$disconnect();
  } catch (error) {
    console.error('โ ุฎุทุฃ:', error.message);
    console.error(error.stack);
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
if (require.main === module) {
  testPatternBehavior();
}

module.exports = { testPatternBehavior };
