const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function listAllUsers() {
  try {
    console.log('๐ฅ ูุงุฆูุฉ ุฌููุน ุงููุณุชุฎุฏููู ูู ุงููุธุงู...\n');

    // ุฌูุจ ุฌููุน ุงููุณุชุฎุฏููู ูุน ูุนูููุงุช ุงูุดุฑูุงุช
    const users = await prisma.user.findMany({
      include: {
        company: {
          select: {
            id: true,
            name: true,
            email: true,
            isActive: true
          }
        }
      },
      orderBy: {
        createdAt: 'desc'
      }
    });

    if (users.length === 0) {
      console.log('โ ูุง ููุฌุฏ ูุณุชุฎุฏููู ูู ุงููุธุงู');
      return;
    }

    console.log(`๐ ุฅุฌูุงูู ุงููุณุชุฎุฏููู: ${users.length}\n`);

    // ุชุฌููุน ุงููุณุชุฎุฏููู ุญุณุจ ุงูุดุฑูุฉ
    const usersByCompany = {};
    
    users.forEach(user => {
      const companyId = user.company?.id || 'no-company';
      const companyName = user.company?.name || 'ุจุฏูู ุดุฑูุฉ';
      
      if (!usersByCompany[companyId]) {
        usersByCompany[companyId] = {
          company: user.company,
          users: []
        };
      }
      
      usersByCompany[companyId].users.push(user);
    });

    // ุนุฑุถ ุงููุณุชุฎุฏููู ูุฌูุนูู ุญุณุจ ุงูุดุฑูุฉ
    let companyIndex = 1;
    for (const [companyId, data] of Object.entries(usersByCompany)) {
      console.log(`${companyIndex}. ๐ข ${data.company?.name || 'ุจุฏูู ุดุฑูุฉ'}`);
      if (data.company) {
        console.log(`   ๐ง ุฅูููู ุงูุดุฑูุฉ: ${data.company.email}`);
        console.log(`   ๐ Company ID: ${data.company.id}`);
        console.log(`   โ ูุดุทุฉ: ${data.company.isActive ? 'ูุนู' : 'ูุง'}`);
      }
      console.log(`   ๐ฅ ุนุฏุฏ ุงููุณุชุฎุฏููู: ${data.users.length}`);
      console.log('   ' + 'โ'.repeat(40));
      
      // ุนุฑุถ ุงููุณุชุฎุฏููู
      data.users.forEach((user, userIndex) => {
        console.log(`   ${userIndex + 1}. ๐ค ${user.firstName} ${user.lastName}`);
        console.log(`      ๐ง ุงูุฅูููู: ${user.email}`);
        console.log(`      ๐ท๏ธ ุงูุฏูุฑ: ${user.role}`);
        console.log(`      โ ูุดุท: ${user.isActive ? 'ูุนู' : 'ูุง'}`);
        console.log(`      ๐ ุชุงุฑูุฎ ุงูุฅูุดุงุก: ${user.createdAt.toLocaleString('ar-EG')}`);
        
        // ูุญุงููุฉ ูุญุต ูููุฉ ุงููุฑูุฑ
        console.log(`      ๐ ูููุฉ ุงููุฑูุฑ ุงููุญุชููุฉ: admin123`);
        console.log('      ' + 'ยท'.repeat(30));
      });
      
      console.log('   ' + 'โ'.repeat(50));
      companyIndex++;
    }

    // ููุฎุต ุจูุงูุงุช ุชุณุฌูู ุงูุฏุฎูู
    console.log('\n๐ ููุฎุต ุจูุงูุงุช ุชุณุฌูู ุงูุฏุฎูู ุงูุณุฑูุน:');
    console.log('โ'.repeat(80));
    
    let loginIndex = 1;
    for (const [companyId, data] of Object.entries(usersByCompany)) {
      if (data.company && data.users.length > 0) {
        console.log(`\n๐ข ${data.company.name}:`);
        data.users.forEach(user => {
          console.log(`   ${loginIndex}. ุงูุฅูููู: ${user.email} | ูููุฉ ุงููุฑูุฑ: admin123`);
          loginIndex++;
        });
      }
    }

    // ุฅุญุตุงุฆูุงุช
    console.log('\n๐ ุงูุฅุญุตุงุฆูุงุช:');
    console.log('โ'.repeat(40));
    const activeUsers = users.filter(u => u.isActive).length;
    const inactiveUsers = users.filter(u => !u.isActive).length;
    const admins = users.filter(u => u.role === 'COMPANY_ADMIN').length;
    const agents = users.filter(u => u.role === 'AGENT').length;
    
    console.log(`๐ฅ ุฅุฌูุงูู ุงููุณุชุฎุฏููู: ${users.length}`);
    console.log(`โ ุงููุณุชุฎุฏููู ุงููุดุทูู: ${activeUsers}`);
    console.log(`โ ุงููุณุชุฎุฏููู ุบูุฑ ุงููุดุทูู: ${inactiveUsers}`);
    console.log(`๐ ุงููุฏูุฑูู: ${admins}`);
    console.log(`๐ง ุงููููุงุก: ${agents}`);
    console.log(`๐ข ุงูุดุฑูุงุช: ${Object.keys(usersByCompany).length}`);

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฌูุจ ุงููุณุชุฎุฏููู:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// ุชุดุบูู ุงูุณูุฑูุจุช
listAllUsers();
