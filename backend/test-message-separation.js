/**
 * ุงุฎุชุจุงุฑ ูุตู ุงูุฑุณุงุฆู ุงููุชุนุฏุฏุฉ
 */

const axios = require('axios');

async function sendMessage(senderId, message, delay = 0) {
  return new Promise((resolve) => {
    setTimeout(async () => {
      const webhookData = {
        object: 'page',
        entry: [{
          time: Date.now(),
          id: '123456789',
          messaging: [{
            sender: { id: senderId },
            recipient: { id: '123456789' },
            timestamp: Date.now(),
            message: {
              mid: `test_${Date.now()}_${Math.random()}`,
              text: message
            }
          }]
        }]
      };

      try {
        console.log(`๐ค ุฅุฑุณุงู: ${senderId} - "${message}"`);
        const response = await axios.post('http://localhost:3001/webhook', webhookData, {
          headers: {
            'Content-Type': 'application/json',
            'User-Agent': 'facebookexternalua'
          },
          timeout: 5000
        });
        
        console.log(`โ ุชู ุฅุฑุณุงู: ${senderId} - "${message}"`);
        resolve(true);
      } catch (error) {
        console.error(`โ ูุดู: ${senderId} - "${message}" - ${error.message}`);
        resolve(false);
      }
    }, delay);
  });
}

async function testMessageSeparation() {
  console.log('\n๐งช ุงุฎุชุจุงุฑ: ูุตู ุงูุฑุณุงุฆู ุงููุชุนุฏุฏุฉ ูู ููุณ ุงูุนููู');
  console.log('=' .repeat(60));

  const senderId = 'test-separation-user';
  
  console.log('๐ค ุฅุฑุณุงู ุฑุณุงูุชูู ูุชุชุงููุชูู ุจุณุฑุนุฉ...');
  
  // ุฅุฑุณุงู ุฑุณุงูุชูู ุจูุงุตู ูุตูุฑ ุฌุฏุงู
  const promises = [
    sendMessage(senderId, 'ุงูุฑุณุงูุฉ ุงูุฃููู', 0),
    sendMessage(senderId, 'ุงูุฑุณุงูุฉ ุงูุซุงููุฉ', 50) // 50ms ููุท
  ];

  const results = await Promise.all(promises);
  
  console.log('\n๐ ูุชุงุฆุฌ ุงูุฅุฑุณุงู:');
  console.log(`ุฑุณุงูุฉ 1: ${results[0] ? 'โ ุชู ุงูุฅุฑุณุงู' : 'โ ูุดู'}`);
  console.log(`ุฑุณุงูุฉ 2: ${results[1] ? 'โ ุชู ุงูุฅุฑุณุงู' : 'โ ูุดู'}`);
  
  // ุงูุชุธุงุฑ ูุนุงูุฌุฉ ุงููุธุงู
  console.log('\nโณ ุงูุชุธุงุฑ ูุนุงูุฌุฉ ุงููุธุงู...');
  await new Promise(resolve => setTimeout(resolve, 10000));
  
  console.log('\n๐ ุชุญูู ูู ุงูููุฌ ูุชุฑู:');
  console.log('1. ูู ุชู ูุนุงูุฌุฉ ุงูุฑุณุงุฆู ูููุตูุฉ ุฃู ูุฏูุฌุฉุ');
  console.log('2. ูู ุชู ุฅูุดุงุก ุฑุฏูุฏ ูููุตูุฉ ููู ุฑุณุงูุฉุ');
  console.log('3. ูู ุชู ุญูุธ ูู ุฑุณุงูุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ูููุตูุฉุ');
  
  return results.every(r => r);
}

async function testConcurrentDifferentUsers() {
  console.log('\n๐งช ุงุฎุชุจุงุฑ: ุฑุณุงุฆู ูุชุฒุงููุฉ ูู ุนููุงุก ูุฎุชูููู');
  console.log('=' .repeat(60));

  console.log('๐ค ุฅุฑุณุงู ุฑุณุงุฆู ูู 3 ุนููุงุก ูู ููุณ ุงูููุช...');
  
  // ุฅุฑุณุงู ุฑุณุงุฆู ูู ุนููุงุก ูุฎุชูููู ูู ููุณ ุงูููุช ุชูุงูุงู
  const promises = [
    sendMessage('user-concurrent-1', 'ูุฑุญุจุง ูู ุงูุนููู ุงูุฃูู', 0),
    sendMessage('user-concurrent-2', 'ูุฑุญุจุง ูู ุงูุนููู ุงูุซุงูู', 0),
    sendMessage('user-concurrent-3', 'ูุฑุญุจุง ูู ุงูุนููู ุงูุซุงูุซ', 0)
  ];

  const results = await Promise.all(promises);
  
  console.log('\n๐ ูุชุงุฆุฌ ุงูุฅุฑุณุงู:');
  results.forEach((result, index) => {
    console.log(`ุนููู ${index + 1}: ${result ? 'โ ุชู ุงูุฅุฑุณุงู' : 'โ ูุดู'}`);
  });
  
  // ุงูุชุธุงุฑ ูุนุงูุฌุฉ ุงููุธุงู
  console.log('\nโณ ุงูุชุธุงุฑ ูุนุงูุฌุฉ ุงููุธุงู...');
  await new Promise(resolve => setTimeout(resolve, 15000));
  
  console.log('\n๐ ุชุญูู ูู ุงูููุฌ ูุชุฑู:');
  console.log('1. ูู ุชู ูุนุงูุฌุฉ ุฌููุน ุงูุฑุณุงุฆูุ');
  console.log('2. ูู ุชู ุฅูุดุงุก ุฑุฏูุฏ ูุฌููุน ุงูุนููุงุกุ');
  console.log('3. ูู ุชู ุชุฌูุจ ุงูุชุฏุงุฎู ุจูู ุงููุนุงูุฌุงุชุ');
  
  return results.every(r => r);
}

async function runTests() {
  console.log('๐ ุจุฏุก ุงุฎุชุจุงุฑุงุช ูุตู ููุนุงูุฌุฉ ุงูุฑุณุงุฆู');
  console.log('=' .repeat(60));
  
  // ุงูุชุธุงุฑ ุชุดุบูู ุงูุฎุงุฏู
  await new Promise(resolve => setTimeout(resolve, 2000));
  
  const test1 = await testMessageSeparation();
  await new Promise(resolve => setTimeout(resolve, 3000));
  
  const test2 = await testConcurrentDifferentUsers();
  
  console.log('\n' + '=' .repeat(60));
  console.log('๐ ุงููุชุงุฆุฌ ุงูููุงุฆูุฉ:');
  console.log(`ูุตู ุงูุฑุณุงุฆู: ${test1 ? 'โ ูุฌุญ ุงูุฅุฑุณุงู' : 'โ ูุดู ุงูุฅุฑุณุงู'}`);
  console.log(`ุนููุงุก ูุชุนุฏุฏูู: ${test2 ? 'โ ูุฌุญ ุงูุฅุฑุณุงู' : 'โ ูุดู ุงูุฅุฑุณุงู'}`);
  
  console.log('\n๐ ููุงุญุธุงุช ูููุฉ:');
  console.log('- ูุฌุงุญ ุงูุฅุฑุณุงู ูุง ูุนูู ูุฌุงุญ ุงููุนุงูุฌุฉ');
  console.log('- ุฑุงุฌุน ุงูููุฌ ูุชุญููู ุณููู ุงููุธุงู');
  console.log('- ุงุจุญุซ ุนู ุฑุณุงุฆู "ูุนุงูุฌุฉ ุฑุณุงูุฉ ูููุตูุฉ"');
  console.log('- ุชุฃูุฏ ูู ุนุฏู ูุฌูุฏ "ุงููุต ุงููุฏูุฌ"');
}

runTests().catch(console.error);
