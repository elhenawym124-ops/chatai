const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');

const prisma = new PrismaClient();

async function createDemoUsers() {
  try {
    console.log('๐ ุฅูุดุงุก ุงููุณุชุฎุฏููู ุงูุชุฌุฑูุจููู...');

    // ุฅูุดุงุก ุดุฑูุฉ ุชุฌุฑูุจูุฉ
    const company = await prisma.company.upsert({
      where: { email: 'demo@smartchat.com' },
      update: {},
      create: {
        name: 'Smart Chat Demo Company',
        email: 'demo@smartchat.com',
        phone: '+20123456789',
        address: 'ุงููุงูุฑุฉุ ูุตุฑ',
        plan: 'PRO',
        currency: 'EGP',
        isActive: true,
        settings: {
          aiEnabled: true,
          autoReply: true,
          workingHours: {
            start: '09:00',
            end: '18:00'
          },
          personalityPrompt: 'ุงูุช ุงุณูู ูุญูุฏุ ุงูุดุญู 70ุ ูุบุฉ ุฑุณููุฉุ ูููุด ูุฑููู ู ุงูุชุนุงูู ุจูุงุน ุตุงุฑู'
        }
      }
    });

    console.log('โ ุชู ุฅูุดุงุก ุงูุดุฑูุฉ ุงูุชุฌุฑูุจูุฉ:', company.name);

    // ูููุฉ ูุฑูุฑ ูุดูุฑุฉ
    const hashedPassword = await bcrypt.hash('admin123', 12);

    // ุฅูุดุงุก ุงููุณุชุฎุฏููู ุงูุชุฌุฑูุจููู
    const demoUsers = [
      {
        email: 'admin@smartchat.com',
        firstName: 'ุฃุญูุฏ',
        lastName: 'ูุญูุฏ',
        role: 'COMPANY_ADMIN',
        description: 'ูุฏูุฑ ุงููุธุงู - ุตูุงุญูุงุช ูุงููุฉ'
      },
      {
        email: 'agent@smartchat.com',
        firstName: 'ูุงุทูุฉ',
        lastName: 'ุนูู',
        role: 'AGENT',
        description: 'ููุธู ุฎุฏูุฉ ุงูุนููุงุก'
      },
      {
        email: 'manager@smartchat.com',
        firstName: 'ูุญูุฏ',
        lastName: 'ุญุณู',
        role: 'MANAGER',
        description: 'ูุฏูุฑ ุงููุจูุนุงุช'
      }
    ];

    for (const userData of demoUsers) {
      const user = await prisma.user.upsert({
        where: { email: userData.email },
        update: {
          isActive: true,
          lastLoginAt: new Date()
        },
        create: {
          email: userData.email,
          password: hashedPassword,
          firstName: userData.firstName,
          lastName: userData.lastName,
          role: userData.role,
          isActive: true,
          isEmailVerified: true,
          companyId: company.id,
          createdAt: new Date(),
          updatedAt: new Date()
        }
      });

      console.log(`โ ุชู ุฅูุดุงุก ุงููุณุชุฎุฏู: ${userData.firstName} ${userData.lastName} (${userData.email})`);
      console.log(`   ๐ง ุงูุจุฑูุฏ: ${userData.email}`);
      console.log(`   ๐ ูููุฉ ุงููุฑูุฑ: admin123`);
      console.log(`   ๐ค ุงูุฏูุฑ: ${userData.role}`);
      console.log(`   ๐ ุงููุตู: ${userData.description}`);
      console.log('');
    }

    console.log('๐ ุชู ุฅูุดุงุก ุฌููุน ุงููุณุชุฎุฏููู ุงูุชุฌุฑูุจููู ุจูุฌุงุญ!');
    console.log('');
    console.log('๐ ููุฎุต ุงูุญุณุงุจุงุช ุงูุชุฌุฑูุจูุฉ:');
    console.log('================================');
    console.log('๐จโ๐ผ ูุฏูุฑ ุงููุธุงู:');
    console.log('   ๐ง admin@smartchat.com');
    console.log('   ๐ admin123');
    console.log('');
    console.log('๐ค ููุธู ุฎุฏูุฉ ุงูุนููุงุก:');
    console.log('   ๐ง agent@smartchat.com');
    console.log('   ๐ admin123');
    console.log('');
    console.log('๐จโ๐ผ ูุฏูุฑ ุงููุจูุนุงุช:');
    console.log('   ๐ง manager@smartchat.com');
    console.log('   ๐ admin123');
    console.log('');
    console.log('๐ ููููู ุงูุขู ุชุณุฌูู ุงูุฏุฎูู ุนูู: http://localhost:3000/auth/login');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงููุณุชุฎุฏููู ุงูุชุฌุฑูุจููู:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

// ุชุดุบูู ุงูู script
if (require.main === module) {
  createDemoUsers()
    .then(() => {
      console.log('โ ุชู ุงูุงูุชูุงุก ูู ุฅูุดุงุก ุงููุณุชุฎุฏููู ุงูุชุฌุฑูุจููู');
      process.exit(0);
    })
    .catch((error) => {
      console.error('โ ูุดู ูู ุฅูุดุงุก ุงููุณุชุฎุฏููู ุงูุชุฌุฑูุจููู:', error);
      process.exit(1);
    });
}

module.exports = { createDemoUsers };
