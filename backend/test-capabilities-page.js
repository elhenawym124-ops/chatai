async function testCapabilitiesPage() {
  console.log('๐งช ุงุฎุชุจุงุฑ ุตูุญุฉ ูุฏุฑุงุช Gemini AI...\n');
  
  const baseURL = 'http://localhost:3001';
  const mockToken = 'mock-access-token';
  
  try {
    console.log('๐ === ุงุฎุชุจุงุฑ Endpoints ุตูุญุฉ ุงููุฏุฑุงุช ===\n');
    
    // 1. ุงุฎุชุจุงุฑ ุฌูุจ ุฅุนุฏุงุฏุงุช ุงููุฏุฑุงุช
    console.log('1๏ธโฃ ุงุฎุชุจุงุฑ ุฌูุจ ุฅุนุฏุงุฏุงุช ุงููุฏุฑุงุช:');
    
    const capabilitiesResponse = await fetch(`${baseURL}/api/v1/ai/capabilities`, {
      headers: { 'Authorization': `Bearer ${mockToken}` }
    });
    
    const capabilitiesData = await capabilitiesResponse.json();
    
    if (capabilitiesData.success) {
      console.log('โ ุชู ุฌูุจ ุฅุนุฏุงุฏุงุช ุงููุฏุฑุงุช ุจูุฌุงุญ');
      console.log('๐ ุงููุฏุฑุงุช ุงููุชุงุญุฉ:');
      Object.entries(capabilitiesData.data).forEach(([key, value]) => {
        console.log(`   ${key}: ${value ? 'โ ููุนู' : 'โ ูุนุทู'}`);
      });
    } else {
      console.log('โ ูุดู ุฌูุจ ุฅุนุฏุงุฏุงุช ุงููุฏุฑุงุช:', capabilitiesData.error);
    }
    
    // 2. ุงุฎุชุจุงุฑ ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช ุงููุฏุฑุงุช
    console.log('\n2๏ธโฃ ุงุฎุชุจุงุฑ ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช ุงููุฏุฑุงุช:');
    
    const updateResponse = await fetch(`${baseURL}/api/v1/ai/capabilities`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${mockToken}`
      },
      body: JSON.stringify({
        'auto-replies': true,
        'image-analysis': false
      })
    });
    
    const updateData = await updateResponse.json();
    
    if (updateData.success) {
      console.log('โ ุชู ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช ุงููุฏุฑุงุช ุจูุฌุงุญ');
      console.log('๐ ุงูุฅุนุฏุงุฏุงุช ุงูุฌุฏูุฏุฉ:');
      Object.entries(updateData.data).forEach(([key, value]) => {
        console.log(`   ${key}: ${value ? 'โ ููุนู' : 'โ ูุนุทู'}`);
      });
    } else {
      console.log('โ ูุดู ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช ุงููุฏุฑุงุช:', updateData.error);
    }
    
    // 3. ุงุฎุชุจุงุฑ ุงููุฏุฑุงุช ุงููุฎุชููุฉ
    console.log('\n3๏ธโฃ ุงุฎุชุจุงุฑ ุงููุฏุฑุงุช ุงููุฎุชููุฉ:');
    
    const capabilitiesToTest = [
      {
        id: 'product-recommendations',
        name: 'ุงูุชุฑุงุญ ุงูููุชุฌุงุช',
        testData: { message: 'ุฃุฑูุฏ ููุชุดู ุฃุจูุถ ูุฑูุญ' }
      },
      {
        id: 'smart-responses',
        name: 'ุงูุฑุฏูุฏ ุงูุฐููุฉ',
        testData: { message: 'ูุฑุญุจุง ููู ุงูุญุงูุ' }
      },
      {
        id: 'sentiment-analysis',
        name: 'ุชุญููู ุงููุดุงุนุฑ',
        testData: { text: 'ุฃุญุจ ูุฐุง ุงูููุชุฌ ูุซูุฑุงู!' }
      },
      {
        id: 'intent-recognition',
        name: 'ููู ุงูููุงูุง',
        testData: { message: 'ุฃุฑูุฏ ุดุฑุงุก ุญุฐุงุก ุฌุฏูุฏ' }
      },
      {
        id: 'image-analysis',
        name: 'ุชุญููู ุงูุตูุฑ',
        testData: { imageUrl: 'https://via.placeholder.com/400x400/FF0000/FFFFFF?text=Test' }
      }
    ];
    
    for (const capability of capabilitiesToTest) {
      console.log(`\n๐ ุงุฎุชุจุงุฑ ${capability.name} (${capability.id}):`);
      
      try {
        const testResponse = await fetch(`${baseURL}/api/v1/ai/test/${capability.id}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${mockToken}`
          },
          body: JSON.stringify(capability.testData)
        });
        
        const testData = await testResponse.json();
        
        if (testData.success) {
          console.log(`   โ ูุฌุญ ุงูุงุฎุชุจุงุฑ`);
          console.log(`   โฑ๏ธ ููุช ุงูุงุณุชุฌุงุจุฉ: ${testData.performance?.responseTime}ms`);
          console.log(`   ๐ฏ ุงูุฏูุฉ: ${testData.performance?.accuracy}%`);
          
          if (testData.data) {
            console.log(`   ๐ ุงููุชูุฌุฉ: ${JSON.stringify(testData.data).substring(0, 100)}...`);
          }
        } else {
          console.log(`   โ ูุดู ุงูุงุฎุชุจุงุฑ: ${testData.error}`);
        }
        
      } catch (error) {
        console.log(`   โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ: ${error.message}`);
      }
      
      // ุงูุชุธุงุฑ ูุตูุฑ ุจูู ุงูุงุฎุชุจุงุฑุงุช
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
    
    // 4. ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุฃุฏุงุก
    console.log('\n4๏ธโฃ ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุฃุฏุงุก:');
    
    const performanceResponse = await fetch(`${baseURL}/api/v1/ai/performance`, {
      headers: { 'Authorization': `Bearer ${mockToken}` }
    });
    
    const performanceData = await performanceResponse.json();
    
    if (performanceData.success) {
      console.log('โ ุชู ุฌูุจ ุฅุญุตุงุฆูุงุช ุงูุฃุฏุงุก ุจูุฌุงุญ');
      console.log('๐ ุงูุฅุญุตุงุฆูุงุช:');
      const stats = performanceData.data;
      console.log(`   ๐ฆ ุฅุฌูุงูู ุงููุฏุฑุงุช: ${stats.totalCapabilities}`);
      console.log(`   โ ุงููุฏุฑุงุช ุงููุดุทุฉ: ${stats.activeCapabilities}`);
      console.log(`   โฑ๏ธ ูุชูุณุท ููุช ุงูุงุณุชุฌุงุจุฉ: ${stats.averageResponseTime}ms`);
      console.log(`   ๐ฏ ูุชูุณุท ุงูุฏูุฉ: ${stats.averageAccuracy}%`);
      console.log(`   ๐งช ุฅุฌูุงูู ุงูุงุฎุชุจุงุฑุงุช: ${stats.totalTests}`);
      console.log(`   โ ุงูุงุฎุชุจุงุฑุงุช ุงููุงุฌุญุฉ: ${stats.successfulTests}`);
      console.log(`   โ ุงูุงุฎุชุจุงุฑุงุช ุงููุงุดูุฉ: ${stats.failedTests}`);
      console.log(`   โก ููุช ุงูุชุดุบูู: ${stats.uptime}`);
    } else {
      console.log('โ ูุดู ุฌูุจ ุฅุญุตุงุฆูุงุช ุงูุฃุฏุงุก:', performanceData.error);
    }
    
    // 5. ุงุฎุชุจุงุฑ ุชุญูููุงุช ุงูุงุณุชุฎุฏุงู
    console.log('\n5๏ธโฃ ุงุฎุชุจุงุฑ ุชุญูููุงุช ุงูุงุณุชุฎุฏุงู:');
    
    const analyticsResponse = await fetch(`${baseURL}/api/v1/ai/analytics`, {
      headers: { 'Authorization': `Bearer ${mockToken}` }
    });
    
    const analyticsData = await analyticsResponse.json();
    
    if (analyticsData.success) {
      console.log('โ ุชู ุฌูุจ ุชุญูููุงุช ุงูุงุณุชุฎุฏุงู ุจูุฌุงุญ');
      console.log('๐ ุงูุชุญูููุงุช:');
      const analytics = analyticsData.data;
      
      console.log('   ๐ ุงูุงุณุชุฎุฏุงู ุงููููู (ุขุฎุฑ 7 ุฃูุงู):');
      analytics.dailyUsage.forEach(day => {
        console.log(`      ${day.date}: ${day.requests} ุทูุจ`);
      });
      
      console.log('   ๐ฏ ุงุณุชุฎุฏุงู ุงููุฏุฑุงุช:');
      Object.entries(analytics.capabilityUsage).forEach(([capability, usage]) => {
        console.log(`      ${capability}: ${usage}%`);
      });
      
      console.log('   โ ุฃูุซุฑ ุงูุฃุฎุทุงุก ุดููุนุงู:');
      analytics.topErrors.forEach(error => {
        console.log(`      ${error.capability}: ${error.count} ูุฑุฉ - ${error.error}`);
      });
    } else {
      console.log('โ ูุดู ุฌูุจ ุชุญูููุงุช ุงูุงุณุชุฎุฏุงู:', analyticsData.error);
    }
    
    // 6. ุงุฎุชุจุงุฑ ุฅุนุงุฏุฉ ุชุนููู ุงููุฏุฑุงุช
    console.log('\n6๏ธโฃ ุงุฎุชุจุงุฑ ุฅุนุงุฏุฉ ุชุนููู ุงููุฏุฑุงุช:');
    
    const resetResponse = await fetch(`${baseURL}/api/v1/ai/reset`, {
      method: 'POST',
      headers: { 'Authorization': `Bearer ${mockToken}` }
    });
    
    const resetData = await resetResponse.json();
    
    if (resetData.success) {
      console.log('โ ุชู ุฅุนุงุฏุฉ ุชุนููู ุงููุฏุฑุงุช ุจูุฌุงุญ');
      console.log('๐ ุงูุฅุนุฏุงุฏุงุช ุงูุงูุชุฑุงุถูุฉ:');
      Object.entries(resetData.data).forEach(([key, value]) => {
        console.log(`   ${key}: ${value ? 'โ ููุนู' : 'โ ูุนุทู'}`);
      });
    } else {
      console.log('โ ูุดู ุฅุนุงุฏุฉ ุชุนููู ุงููุฏุฑุงุช:', resetData.error);
    }
    
    console.log('\n๐ === ุงูุชูู ุงุฎุชุจุงุฑ ุตูุญุฉ ูุฏุฑุงุช Gemini AI ===');
    console.log('\n๐ ููุฎุต ุงููุชุงุฆุฌ:');
    console.log('โ ุฌููุน endpoints ุชุนูู ุจุดูู ุตุญูุญ');
    console.log('โ ูููู ุฌูุจ ูุชุญุฏูุซ ุฅุนุฏุงุฏุงุช ุงููุฏุฑุงุช');
    console.log('โ ูููู ุงุฎุชุจุงุฑ ุงููุฏุฑุงุช ุงููุฎุชููุฉ');
    console.log('โ ุฅุญุตุงุฆูุงุช ุงูุฃุฏุงุก ูุชุงุญุฉ');
    console.log('โ ุชุญูููุงุช ุงูุงุณุชุฎุฏุงู ูุชุงุญุฉ');
    console.log('โ ุฅุนุงุฏุฉ ุงูุชุนููู ุชุนูู');
    
    console.log('\n๐ฏ ุงูุตูุญุฉ ุฌุงูุฒุฉ ููุงุณุชุฎุฏุงู!');
    console.log('๐ ุฑุงุจุท ุงูุตูุญุฉ: http://localhost:3000/gemini-capabilities');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ุนุงู ูู ุงุฎุชุจุงุฑ ุงูุตูุญุฉ:', error);
  }
}

testCapabilitiesPage();
