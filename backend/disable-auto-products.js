const { PrismaClient } = require('@prisma/client');

/**
 * ุฅููุงู ุงูุชุฑุงุญ ุงูููุชุฌุงุช ุงูุชููุงุฆู
 * ูููู ุจุชุญุฏูุซ ุฅุนุฏุงุฏุงุช ุงูุฐูุงุก ุงูุตูุงุนู ูุฅููุงู ุงูุชุฑุงุญ ุงูููุชุฌุงุช ูู ูู ุฑุฏ
 */

async function disableAutoProductSuggestions() {
  const prisma = new PrismaClient();
  
  try {
    console.log('๐ง ุจุฏุก ุฅููุงู ุงูุชุฑุงุญ ุงูููุชุฌุงุช ุงูุชููุงุฆู...\n');
    
    // ุงูุญุตูู ุนูู ุฌููุน ุงูุดุฑูุงุช
    const companies = await prisma.company.findMany({
      select: { id: true, name: true }
    });
    
    console.log(`๐ ุชู ุงูุนุซูุฑ ุนูู ${companies.length} ุดุฑูุฉ\n`);
    
    for (const company of companies) {
      console.log(`๐ข ูุนุงูุฌุฉ ุงูุดุฑูุฉ: ${company.name} (${company.id})`);
      
      // ุชุญุฏูุซ ุฃู ุฅูุดุงุก ุฅุนุฏุงุฏุงุช ุงูุฐูุงุก ุงูุตูุงุนู
      const aiSettings = await prisma.aiSettings.upsert({
        where: { companyId: company.id },
        update: {
          autoSuggestProducts: false,  // ุฅููุงู ุงูุชุฑุงุญ ุงูููุชุฌุงุช
          maxSuggestions: 0,           // ุนุฏู ุงูุชุฑุงุญ ุฃู ููุชุฌุงุช
          includeImages: false,        // ุนุฏู ุชุถููู ุตูุฑ
          updatedAt: new Date()
        },
        create: {
          companyId: company.id,
          autoReplyEnabled: true,      // ุงูุฑุฏ ุงูุชููุงุฆู ููุนู
          autoSuggestProducts: false,  // ุงูุชุฑุงุญ ุงูููุชุฌุงุช ูุนุทู
          maxSuggestions: 0,
          includeImages: false,
          confidenceThreshold: 0.7,
          personalityPrompt: null,
          responsePrompt: null,
          escalationRules: '{}',
          modelSettings: '{}'
        }
      });
      
      console.log(`   โ ุชู ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช ุงูุดุฑูุฉ ${company.name}`);
      console.log(`   ๐ฆ ุงูุชุฑุงุญ ุงูููุชุฌุงุช: ${aiSettings.autoSuggestProducts ? 'ููุนู' : 'ูุนุทู'}`);
      console.log(`   ๐ข ุนุฏุฏ ุงูุงูุชุฑุงุญุงุช: ${aiSettings.maxSuggestions}`);
      console.log('');
    }
    
    // ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช ุงููุธุงู ุงูุนุงูุฉ
    console.log('๐ง ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช ุงููุธุงู ุงูุนุงูุฉ...');
    
    for (const company of companies) {
      await prisma.systemConfig.upsert({
        where: { companyId: company.id },
        update: {
          settings: {
            autoReplyEnabled: true,
            autoSuggestProducts: false,  // ุฅููุงู ุงูุชุฑุงุญ ุงูููุชุฌุงุช
            useAdvancedTools: false      // ุฅููุงู ุงูุฃุฏูุงุช ุงููุชูุฏูุฉ
          },
          updatedAt: new Date()
        },
        create: {
          companyId: company.id,
          systemMode: 'traditional',
          traditionalEnabled: true,
          advancedEnabled: false,
          hybridEnabled: true,
          currentSystem: 'traditional',
          settings: {
            autoReplyEnabled: true,
            autoSuggestProducts: false,
            useAdvancedTools: false
          }
        }
      });
      
      console.log(`   โ ุชู ุชุญุฏูุซ ุฅุนุฏุงุฏุงุช ุงููุธุงู ููุดุฑูุฉ ${company.name}`);
    }
    
    console.log('\n๐ ุชู ุฅููุงู ุงูุชุฑุงุญ ุงูููุชุฌุงุช ุงูุชููุงุฆู ุจูุฌุงุญ!');
    console.log('\n๐ ุงูุชุบููุฑุงุช ุงููุทุจูุฉ:');
    console.log('   โ ุฅููุงู ุงูุชุฑุงุญ ุงูููุชุฌุงุช ุงูุชููุงุฆู');
    console.log('   โ ุฅููุงู ุชุถููู ุตูุฑ ุงูููุชุฌุงุช');
    console.log('   โ ุฅููุงู ุงูุฃุฏูุงุช ุงููุชูุฏูุฉ');
    console.log('   โ ุงูุฑุฏ ุงูุชููุงุฆู ูุง ูุฒุงู ููุนู');
    console.log('   โ ุงููุธุงู ุงูุชูููุฏู ููุนู');
    
    console.log('\n๐ก ููุงุญุธุฉ: ููููู ุฅุนุงุฏุฉ ุชูุนูู ุงูุชุฑุงุญ ุงูููุชุฌุงุช ูุงุญูุงู ูู ููุญุฉ ุงูุชุญูู');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅููุงู ุงูุชุฑุงุญ ุงูููุชุฌุงุช:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// ุชุดุบูู ุงูุฏุงูุฉ
disableAutoProductSuggestions();
