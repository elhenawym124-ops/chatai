const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function checkCompanyPrompts() {
  try {
    console.log('๐ ูุญุต ุฅุนุฏุงุฏุงุช ุดุฑูุฉ ุงูุญูู...\n');
    
    // 1. ูุญุต ุจูุงูุงุช ุงูุดุฑูุฉ
    const company = await prisma.company.findUnique({
      where: { id: await getCompanyByName('ุงูุญูู') },
      include: {
        aiSettings: true,
        facebookPages: true
      }
    });
    
    if (!company) {
      console.log('โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูุดุฑูุฉ');
      return;
    }
    
    console.log('๐ข ุจูุงูุงุช ุงูุดุฑูุฉ:');
    console.log(`   ุงูุงุณู: ${company.name}`);
    console.log(`   ุงูููุน: ${company.businessType || 'ุบูุฑ ูุญุฏุฏ'}`);
    console.log(`   ID: ${company.id}`);
    
    console.log('\n๐ฑ ุงูุตูุญุงุช ุงููุฑุจูุทุฉ:');
    company.facebookPages.forEach(page => {
      console.log(`   - ${page.pageName} (${page.pageId})`);
    });
    
    // 2. ูุญุต ุฅุนุฏุงุฏุงุช AI
    console.log('\nโ๏ธ ุฅุนุฏุงุฏุงุช AI:');
    if (company.aiSettings && company.aiSettings.length > 0) {
      const ai = company.aiSettings[0];
      console.log('   โ ุฅุนุฏุงุฏุงุช AI ููุฌูุฏุฉ');
      console.log(`   ๐ค autoReplyEnabled: ${ai.autoReplyEnabled}`);
      console.log(`   ๐ confidenceThreshold: ${ai.confidenceThreshold}`);
      
      console.log('\n๐ค personalityPrompt:');
      if (ai.personalityPrompt) {
        console.log('   โ ููุฌูุฏ');
        console.log('   ๐ ุงููุญุชูู:');
        console.log(`   "${ai.personalityPrompt}"`);
      } else {
        console.log('   โ ุบูุฑ ููุฌูุฏ');
      }
      
      console.log('\n๐ responsePrompt:');
      if (ai.responsePrompt) {
        console.log('   โ ููุฌูุฏ');
        console.log('   ๐ ุงููุญุชูู:');
        console.log(`   "${ai.responsePrompt}"`);
      } else {
        console.log('   โ ุบูุฑ ููุฌูุฏ');
      }
      
    } else {
      console.log('   โ ูุง ุชูุฌุฏ ุฅุนุฏุงุฏุงุช AI');
    }
    
    // 3. ูุญุต ุงูู prompt ุงูุงูุชุฑุงุถู ุงููุณุชุฎุฏู
    console.log('\n๐ ูุญุต ุงูู prompt ุงูุงูุชุฑุงุถู ุงููุณุชุฎุฏู ูู ุงูููุฏ...');
    
    // ูุฐุง ูู ุงูู prompt ุงูุงูุชุฑุงุถู ูู ุงูููุฏ
    const defaultPrompt = `ุฃูุช ุณุงุฑูุ ูุณุงุนุฏุฉ ูุจูุนุงุช ุฐููุฉ ูุทุจูุนูุฉ ูู ูุชุฌุฑ ุฅููุชุฑููู:
- ุชุชุญุฏุซูู ุจุทุฑููุฉ ูุฏูุฏุฉ ูููููุฉ
- ุชุณุชุฎุฏููู ุงููุบุฉ ุงูุนุฑุจูุฉ ุงููุงุถุญุฉ
- ุชููููู ููุฉ ุงูุนููู ูุจู ุงูุชุฑุงุญ ุงูููุชุฌุงุช
- ุชูุฏููู ูุนูููุงุช ุฏูููุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช`;
    
    console.log('๐ ุงูู prompt ุงูุงูุชุฑุงุถู ุงูุญุงูู:');
    console.log(`"${defaultPrompt}"`);
    
    console.log('\n๐จ ุงููุดููุฉ ุงูููุชุดูุฉ:');
    console.log('   โ ุงูู prompt ุงูุงูุชุฑุงุถู ูุณุชุฎุฏู ุงุณู "ุณุงุฑู"');
    console.log('   โ ูุฐุง ุงูุงุณู ุฎุงุต ุจุดุฑูุฉ ุฃุฎุฑู');
    console.log('   โ ูุฌุจ ุชุฎุตูุต prompt ูุดุฑูุฉ ุงูุญูู');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

checkCompanyPrompts();
