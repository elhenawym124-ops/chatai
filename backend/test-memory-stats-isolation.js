
// Helper function ููุญุตูู ุนูู ูุนุฑู ุงูุดุฑูุฉ ุจุงูุงุณู
async function getCompanyByName(name) {
  const { PrismaClient } = require('@prisma/client');
  const prisma = new PrismaClient();
  try {
    const company = await prisma.company.findFirst({
      where: { name: { contains: name } }
    });
    await prisma.$disconnect();
    return company?.id || null;
  } catch (error) {
    console.error('ุฎุทุฃ ูู ุงูุจุญุซ ุนู ุงูุดุฑูุฉ:', error);
    return null;
  }
}
/**
 * ุงุฎุชุจุงุฑ ุนุฒู ุฅุญุตุงุฆูุงุช ุงูุฐุงูุฑุฉ
 */

const memoryService = require('./src/services/memoryService');
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function testMemoryStatsIsolation() {
  console.log('๐ ุงุฎุชุจุงุฑ ุนุฒู ุฅุญุตุงุฆูุงุช ุงูุฐุงูุฑุฉ...');
  console.log('='.repeat(60));

  const company1 = 'cme8oj1fo000cufdcg2fquia9';
  // ุงูุญุตูู ุนูู ุดุฑูุฉ ุงูุญูู ุฏููุงููููุงู
  const companies = await prisma.company.findMany({ where: { name: { contains: 'ุงูุญูู' } } });
  const company2 = companies[0]?.id || 'company-not-found';

  try {
    // 1. ุฅุถุงูุฉ ุจูุงูุงุช ุงุฎุชุจุงุฑ ููุดุฑูุฉ ุงูุฃููู
    console.log('\n๐ค ุฅุถุงูุฉ ุจูุงูุงุช ุงุฎุชุจุงุฑ ููุดุฑูุฉ ุงูุฃููู...');
    await memoryService.saveInteraction({
      conversationId: 'stats-test-conv-1',
      senderId: 'stats-test-user-1',
      companyId: company1,
      userMessage: 'ุฑุณุงูุฉ ุงุฎุชุจุงุฑ ููุดุฑูุฉ ุงูุฃููู',
      aiResponse: 'ุฑุฏ ุงูุดุฑูุฉ ุงูุฃููู',
      intent: 'test',
      sentiment: 'positive'
    });

    // 2. ุฅุถุงูุฉ ุจูุงูุงุช ุงุฎุชุจุงุฑ ููุดุฑูุฉ ุงูุซุงููุฉ
    console.log('\n๐ค ุฅุถุงูุฉ ุจูุงูุงุช ุงุฎุชุจุงุฑ ููุดุฑูุฉ ุงูุซุงููุฉ...');
    await memoryService.saveInteraction({
      conversationId: 'stats-test-conv-2',
      senderId: 'stats-test-user-2',
      companyId: company2,
      userMessage: 'ุฑุณุงูุฉ ุงุฎุชุจุงุฑ ููุดุฑูุฉ ุงูุซุงููุฉ',
      aiResponse: 'ุฑุฏ ุงูุดุฑูุฉ ุงูุซุงููุฉ',
      intent: 'test',
      sentiment: 'positive'
    });

    // 3. ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุดุฑูุฉ ุงูุฃููู
    console.log('\n๐ ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุดุฑูุฉ ุงูุฃููู...');
    const stats1 = await memoryService.getMemoryStats(company1);
    console.log('ุฅุญุตุงุฆูุงุช ุงูุดุฑูุฉ ุงูุฃููู:');
    console.log(`   - ุฅุฌูุงูู ุงููุญุงุฏุซุงุช: ${stats1.totalMemories}`);
    console.log(`   - ุฅุฌูุงูู ุงูุฑุณุงุฆู: ${stats1.totalMessages}`);
    console.log(`   - ุฅุฌูุงูู ุงูุนููุงุก: ${stats1.totalCustomers}`);
    console.log(`   - ุณุฌูุงุช ุงูุฐุงูุฑุฉ: ${stats1.conversationMemoryRecords}`);
    console.log(`   - ุงูุฐุงูุฑุฉ ูุตูุฑุฉ ุงููุฏู: ${stats1.shortTermMemorySize}`);
    console.log(`   - ูุนุฒููุฉ: ${stats1.isolated}`);
    console.log(`   - ูุนุฑู ุงูุดุฑูุฉ: ${stats1.companyId}`);

    // 4. ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุดุฑูุฉ ุงูุซุงููุฉ
    console.log('\n๐ ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุดุฑูุฉ ุงูุซุงููุฉ...');
    const stats2 = await memoryService.getMemoryStats(company2);
    console.log('ุฅุญุตุงุฆูุงุช ุงูุดุฑูุฉ ุงูุซุงููุฉ:');
    console.log(`   - ุฅุฌูุงูู ุงููุญุงุฏุซุงุช: ${stats2.totalMemories}`);
    console.log(`   - ุฅุฌูุงูู ุงูุฑุณุงุฆู: ${stats2.totalMessages}`);
    console.log(`   - ุฅุฌูุงูู ุงูุนููุงุก: ${stats2.totalCustomers}`);
    console.log(`   - ุณุฌูุงุช ุงูุฐุงูุฑุฉ: ${stats2.conversationMemoryRecords}`);
    console.log(`   - ุงูุฐุงูุฑุฉ ูุตูุฑุฉ ุงููุฏู: ${stats2.shortTermMemorySize}`);
    console.log(`   - ูุนุฒููุฉ: ${stats2.isolated}`);
    console.log(`   - ูุนุฑู ุงูุดุฑูุฉ: ${stats2.companyId}`);

    // 5. ุงุฎุชุจุงุฑ ุงูุฅุญุตุงุฆูุงุช ุงูุนุงูุฉ (ุจุฏูู ุนุฒู)
    console.log('\n๐ ุงุฎุชุจุงุฑ ุงูุฅุญุตุงุฆูุงุช ุงูุนุงูุฉ (ุจุฏูู ุนุฒู)...');
    const statsAll = await memoryService.getMemoryStats();
    console.log('ุงูุฅุญุตุงุฆูุงุช ุงูุนุงูุฉ:');
    console.log(`   - ุฅุฌูุงูู ุงููุญุงุฏุซุงุช: ${statsAll.totalMemories}`);
    console.log(`   - ุฅุฌูุงูู ุงูุฑุณุงุฆู: ${statsAll.totalMessages}`);
    console.log(`   - ุฅุฌูุงูู ุงูุนููุงุก: ${statsAll.totalCustomers}`);
    console.log(`   - ุณุฌูุงุช ุงูุฐุงูุฑุฉ: ${statsAll.conversationMemoryRecords}`);
    console.log(`   - ุงูุฐุงูุฑุฉ ูุตูุฑุฉ ุงููุฏู: ${statsAll.shortTermMemorySize}`);
    console.log(`   - ูุนุฒููุฉ: ${statsAll.isolated}`);
    console.log(`   - ูุนุฑู ุงูุดุฑูุฉ: ${statsAll.companyId}`);

    // 6. ูุญุต ุงูุนุฒู
    console.log('\n๐ ูุญุต ุงูุนุฒู...');
    
    const isolationCheck = {
      company1HasOwnData: stats1.conversationMemoryRecords > 0,
      company2HasOwnData: stats2.conversationMemoryRecords > 0,
      company1DataDifferent: stats1.conversationMemoryRecords !== stats2.conversationMemoryRecords,
      allDataIsSum: statsAll.conversationMemoryRecords >= (stats1.conversationMemoryRecords + stats2.conversationMemoryRecords),
      bothIsolated: stats1.isolated && stats2.isolated,
      allNotIsolated: !statsAll.isolated
    };

    console.log('ูุชุงุฆุฌ ูุญุต ุงูุนุฒู:');
    Object.entries(isolationCheck).forEach(([check, passed]) => {
      const status = passed ? 'โ' : 'โ';
      console.log(`   ${status} ${check}: ${passed}`);
    });

    // 7. ุงุฎุชุจุงุฑ ุชูุฒูุน ุงูุฐุงูุฑุฉ
    if (stats1.memoryDistribution && stats2.memoryDistribution) {
      console.log('\n๐ ุชูุฒูุน ุงูุฐุงูุฑุฉ:');
      console.log('ุงูุดุฑูุฉ ุงูุฃููู:');
      console.log(`   - ูุงุนุฏุฉ ุงูุจูุงูุงุช: ${stats1.memoryDistribution.database}`);
      console.log(`   - ูุตูุฑุฉ ุงููุฏู: ${stats1.memoryDistribution.shortTerm}`);
      console.log(`   - ุงูุฅุฌูุงูู: ${stats1.memoryDistribution.total}`);
      
      console.log('ุงูุดุฑูุฉ ุงูุซุงููุฉ:');
      console.log(`   - ูุงุนุฏุฉ ุงูุจูุงูุงุช: ${stats2.memoryDistribution.database}`);
      console.log(`   - ูุตูุฑุฉ ุงููุฏู: ${stats2.memoryDistribution.shortTerm}`);
      console.log(`   - ุงูุฅุฌูุงูู: ${stats2.memoryDistribution.total}`);
    }

    // 8. ุชุญููู ููุงุฆู
    console.log('\n๐ ุชุญููู ููุงุฆู:');
    
    const allChecksPassed = Object.values(isolationCheck).every(check => check === true);
    
    if (allChecksPassed) {
      console.log('๐ ุงูุนุฒู ูู ุฅุญุตุงุฆูุงุช ุงูุฐุงูุฑุฉ ูุนูู ุจุดูู ูุซุงูู!');
      console.log('โ ูู ุดุฑูุฉ ุชุฑู ุฅุญุตุงุฆูุงุชูุง ููุท');
      console.log('โ ูุง ููุฌุฏ ุชุณุฑูุจ ูู ุงูุฅุญุตุงุฆูุงุช');
      console.log('โ ุงููุธุงู ุขูู ููุฅูุชุงุฌ');
    } else {
      console.log('๐จ ูุง ุชุฒุงู ููุงู ูุดุงูู ูู ุนุฒู ุงูุฅุญุตุงุฆูุงุช!');
      console.log('โ ุงููุธุงู ุบูุฑ ุขูู');
    }

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุนุฒู ุงูุฅุญุตุงุฆูุงุช:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

testMemoryStatsIsolation().catch(console.error);
