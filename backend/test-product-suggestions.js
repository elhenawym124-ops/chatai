const AdvancedProductService = require('./src/services/advancedProductService');

async function testProductSuggestions() {
  const advancedProductService = new AdvancedProductService();
  const companyId = 'cmd5c0c9y0000ymzdd7wtv7ib';
  
  console.log('üß™ Testing Product Suggestions for Different Messages...\n');
  
  const testMessages = [
    'ŸÇŸàŸÑŸä ÿßŸÑŸÖŸàÿØŸäŸÑÿßÿ™',
    'ÿπÿßŸäÿ≤ÿ© ŸÉŸàÿ™ÿ¥Ÿä',
    'ÿßŸäŸá ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿßŸÑŸÑŸä ÿπŸÜÿØŸÉ',
    'ÿßŸÜÿµÿ≠ŸäŸÜŸä ÿ®ÿ≠ÿßÿ¨ÿ© ÿ≠ŸÑŸàÿ©',
    'ÿπŸÜÿØŸÉ ÿßŸäŸá ÿ¨ÿØŸäÿØ',
    'ÿ£ÿ±ŸäÿØ ÿ£ÿ¥ÿ™ÿ±Ÿä ÿ≠ÿ∞ÿßÿ°'
  ];
  
  for (const message of testMessages) {
    console.log(`üîç Testing: "${message}"`);
    
    try {
      const result = await advancedProductService.recommendProducts(companyId, message, 'test-customer');
      
      if (result.success) {
        console.log(`‚úÖ Success: Found ${result.data.recommendations.length} recommendations`);
        result.data.recommendations.forEach((product, index) => {
          console.log(`   ${index + 1}. ${product.productName || product.name} - ${product.price} ÿ¨ŸÜŸäŸá`);
          console.log(`      ÿßŸÑÿ≥ÿ®ÿ®: ${product.reason}`);
        });
      } else {
        console.log(`‚ùå Failed: ${result.error}`);
      }
    } catch (error) {
      console.log(`‚ùå Error: ${error.message}`);
    }
    
    console.log('');
  }
}

testProductSuggestions();
