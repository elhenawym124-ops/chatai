const { PrismaClient } = require('@prisma/client');

console.log('๐ ูุญุต ุดุฑูุฉ ุณููุง 132 - ุชุญุฏูุฏ ุงูุดุฑูุฉ ุงูุตุญูุญุฉ...\n');

class SolaCompanyChecker {
  constructor() {
    this.prisma = new PrismaClient();
  }
  
  async findSolaCompany() {
    console.log('๐ข ุงูุจุญุซ ุนู ุดุฑูุฉ ุณููุง 132...');
    
    try {
      // ุงูุจุญุซ ูู ุตูุญุงุช ุงูููุณุจูู
      const facebookPages = await this.prisma.facebookPage.findMany({
        where: {
          pageId: '250528358137901' // ูู ุงูููุฌ
        },
        include: {
          company: true
        }
      });
      
      console.log(`๐ฑ ุตูุญุงุช ููุณุจูู ุจู Page ID 250528358137901: ${facebookPages.length}`);
      
      if (facebookPages.length > 0) {
        const page = facebookPages[0];
        console.log(`โ ุชู ุงูุนุซูุฑ ุนูู ุงูุตูุญุฉ:`);
        console.log(`   ๐ ุงุณู ุงูุตูุญุฉ: "${page.pageName}"`);
        console.log(`   ๐ Page ID: ${page.pageId}`);
        console.log(`   ๐ข ุงูุดุฑูุฉ: ${page.company.name} (${page.company.id})`);
        console.log(`   โ ูุดุทุฉ: ${page.isActive}`);
        
        return page.company;
      }
      
      // ุงูุจุญุซ ูู ุงููุญุงุฏุซุงุช
      console.log('\n๐ฌ ุงูุจุญุซ ูู ุงููุญุงุฏุซุงุช...');
      const conversations = await this.prisma.conversation.findMany({
        where: {
          id: 'cme9y5y7t001rufr85z7y3if4' // ูู ุงูููุฌ
        },
        include: {
          customer: true,
          company: true
        }
      });
      
      if (conversations.length > 0) {
        const conv = conversations[0];
        console.log(`โ ุชู ุงูุนุซูุฑ ุนูู ุงููุญุงุฏุซุฉ:`);
        console.log(`   ๐ ID: ${conv.id}`);
        console.log(`   ๐ค ุงูุนููู: ${conv.customer.firstName} ${conv.customer.lastName}`);
        console.log(`   ๐ฑ Facebook ID: ${conv.customer.facebookId}`);
        console.log(`   ๐ข ุงูุดุฑูุฉ: ${conv.company.name} (${conv.company.id})`);
        
        return conv.company;
      }
      
      console.log('โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุดุฑูุฉ ุณููุง 132');
      return null;
      
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุงูุจุญุซ:', error.message);
      return null;
    }
  }
  
  async analyzeCompanyProducts(companyId) {
    console.log(`\n๐ฆ ุชุญููู ููุชุฌุงุช ุงูุดุฑูุฉ: ${companyId}`);
    
    try {
      const products = await this.prisma.product.findMany({
        where: { companyId: companyId },
        include: {
          company: true
        }
      });
      
      console.log(`๐ฆ ุนุฏุฏ ุงูููุชุฌุงุช: ${products.length}`);
      
      products.forEach((product, index) => {
        console.log(`\n${index + 1}. ๐ฆ "${product.name}"`);
        console.log(`   ๐ฐ ุงูุณุนุฑ: ${product.price} ุฌููู`);
        console.log(`   ๐ ุงููุตู: "${product.description || 'ุจุฏูู ูุตู'}"`);
        console.log(`   ๐ฆ ุงููุฎุฒูู: ${product.stock}`);
        console.log(`   ๐ท๏ธ ุงูุนูุงูุงุช: "${product.tags || 'ุจุฏูู ุนูุงูุงุช'}"`);
        console.log(`   ๐ Product ID: ${product.id}`);
        console.log(`   ๐ข ุงูุดุฑูุฉ: ${product.company.name}`);
      });
      
      return products;
      
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุชุญููู ุงูููุชุฌุงุช:', error.message);
      return [];
    }
  }
  
  async checkOtherCompanies() {
    console.log('\n๐ ูุญุต ุงูุดุฑูุงุช ุงูุฃุฎุฑู...');
    
    try {
      const companies = await this.prisma.company.findMany({
        include: {
          products: true,
          facebookPages: true
        }
      });
      
      console.log(`๐ข ุฅุฌูุงูู ุงูุดุฑูุงุช: ${companies.length}`);
      
      companies.forEach((company, index) => {
        console.log(`\n${index + 1}. ๐ข ${company.name} (${company.id}):`);
        console.log(`   ๐ฆ ุงูููุชุฌุงุช: ${company.products.length}`);
        console.log(`   ๐ฑ ุตูุญุงุช ููุณุจูู: ${company.facebookPages.length}`);
        
        // ุนุฑุถ ุงูููุชุฌุงุช
        company.products.forEach((product, pIndex) => {
          console.log(`      ${pIndex + 1}. "${product.name}" - ${product.price} ุฌููู`);
        });
        
        // ุนุฑุถ ุตูุญุงุช ููุณุจูู
        company.facebookPages.forEach((page, fIndex) => {
          console.log(`      FB${fIndex + 1}. "${page.pageName}" (${page.pageId})`);
        });
      });
      
      return companies;
      
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ูุญุต ุงูุดุฑูุงุช:', error.message);
      return [];
    }
  }
  
  async verifyIsolation() {
    console.log('\n๐ ุงูุชุญูู ูู ุงูุนุฒู...');
    
    try {
      // ุงูุดุฑูุฉ ูู ุงูููุฌ
      const logCompanyId = 'cme8oj1fo000cufdcg2fquia9';
      
      console.log(`๐ ูุญุต ุงูุนุฒู ููุดุฑูุฉ: ${logCompanyId}`);
      
      // ููุชุฌุงุช ุงูุดุฑูุฉ ูู ุงูููุฌ
      const logCompanyProducts = await this.prisma.product.findMany({
        where: { companyId: logCompanyId }
      });
      
      console.log(`๐ฆ ููุชุฌุงุช ุงูุดุฑูุฉ ${logCompanyId}: ${logCompanyProducts.length}`);
      
      logCompanyProducts.forEach((product, index) => {
        console.log(`   ${index + 1}. "${product.name}" - ${product.price} ุฌููู`);
      });
      
      // ููุชุฌุงุช ุงูุดุฑูุงุช ุงูุฃุฎุฑู
      const otherProducts = await this.prisma.product.findMany({
        where: { 
          companyId: { not: logCompanyId }
        },
        include: {
          company: true
        }
      });
      
      console.log(`\n๐ฆ ููุชุฌุงุช ุงูุดุฑูุงุช ุงูุฃุฎุฑู: ${otherProducts.length}`);
      
      otherProducts.forEach((product, index) => {
        console.log(`   ${index + 1}. "${product.name}" - ุดุฑูุฉ: ${product.company.name}`);
      });
      
      // ุงูุชุญูู ูู ุงูุชุณุฑูุจ
      console.log('\n๐ต๏ธ ูุญุต ุงูุชุณุฑูุจ ุงููุญุชูู...');
      
      const suspiciousProducts = otherProducts.filter(product => 
        product.name.includes('ุงูุดุฑูุฉ ุงูุฃููู') || 
        product.name.includes('ููุชุฌ ุงูุดุฑูุฉ')
      );
      
      if (suspiciousProducts.length > 0) {
        console.log(`๐จ ุชู ุงูุนุซูุฑ ุนูู ${suspiciousProducts.length} ููุชุฌ ูุดุจูู:`);
        suspiciousProducts.forEach((product, index) => {
          console.log(`   ${index + 1}. "${product.name}" ูู ุดุฑูุฉ: ${product.company.name}`);
        });
      } else {
        console.log('โ ูุง ููุฌุฏ ุชุณุฑูุจ - ุงูุนุฒู ูุนูู ุจุดูู ุตุญูุญ');
      }
      
      return {
        logCompanyProducts,
        otherProducts,
        suspiciousProducts
      };
      
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุงูุชุญูู ูู ุงูุนุฒู:', error.message);
      return null;
    }
  }
  
  async generateFinalReport() {
    console.log('\n๐ ุงูุชูุฑูุฑ ุงูููุงุฆู:');
    console.log('โ'.repeat(80));
    
    const solaCompany = await this.findSolaCompany();
    const allCompanies = await this.checkOtherCompanies();
    const isolationCheck = await this.verifyIsolation();
    
    console.log('\n๐ฏ ุงููุชุงุฆุฌ ุงูุฑุฆูุณูุฉ:');
    console.log('โ'.repeat(50));
    
    if (solaCompany) {
      console.log(`๐ฑ ุณููุง 132 ุชูุชูู ูุดุฑูุฉ: ${solaCompany.name} (${solaCompany.id})`);
      
      const solaProducts = await this.analyzeCompanyProducts(solaCompany.id);
      
      console.log(`\n๐ฆ ููุชุฌุงุช ุดุฑูุฉ ุณููุง 132:`);
      solaProducts.forEach((product, index) => {
        console.log(`   ${index + 1}. "${product.name}" - ${product.price} ุฌููู`);
      });
    }
    
    console.log('\n๐ ุชุญููู ุงูุนุฒู:');
    if (isolationCheck) {
      console.log(`โ ููุชุฌุงุช ุงูุดุฑูุฉ ุงูุญุงููุฉ: ${isolationCheck.logCompanyProducts.length}`);
      console.log(`๐ก๏ธ ููุชุฌุงุช ุงูุดุฑูุงุช ุงูุฃุฎุฑู: ${isolationCheck.otherProducts.length}`);
      console.log(`๐จ ููุชุฌุงุช ูุดุจููุฉ: ${isolationCheck.suspiciousProducts.length}`);
      
      if (isolationCheck.suspiciousProducts.length === 0) {
        console.log('โ ุงูุนุฒู ูุนูู ุจุดูู ูุซุงูู - ูุง ููุฌุฏ ุชุณุฑูุจ');
      } else {
        console.log('โ ุชู ุงูุชุดุงู ุชุณุฑูุจ ูุญุชูู');
      }
    }
    
    console.log('\n๐ฏ ุงูุฎูุงุตุฉ ุงูููุงุฆูุฉ:');
    console.log('   1. ุชู ุชุญุฏูุฏ ุดุฑูุฉ ุณููุง 132');
    console.log('   2. ุชู ุชุญููู ููุชุฌุงุช ุฌููุน ุงูุดุฑูุงุช');
    console.log('   3. ุชู ุงูุชุญูู ูู ุงูุนุฒู');
    console.log('   4. ุชู ูุญุต ุงูุชุณุฑูุจ ุงููุญุชูู');
    
    return {
      solaCompany,
      allCompanies,
      isolationCheck
    };
  }
  
  async cleanup() {
    await this.prisma.$disconnect();
  }
}

// ุชุดุบูู ุงููุญุต
async function runSolaCheck() {
  const checker = new SolaCompanyChecker();
  
  try {
    const report = await checker.generateFinalReport();
    console.log('\n๐ ุงูุชูู ูุญุต ุณููุง 132!');
    return report;
    
  } catch (error) {
    console.error('๐ฅ ุฎุทุฃ ูู ุงููุญุต:', error);
    return null;
  } finally {
    await checker.cleanup();
  }
}

runSolaCheck();
