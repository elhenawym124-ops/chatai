/**
 * ูุญุต ุนููู ูููุธุงู ูุงูุชุดุงู ุงููุดููุฉ ุงูุญููููุฉ
 */

const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function deepSystemAnalysis() {
  console.log('๐ฌ ูุญุต ุนููู ูููุธุงู...');
  console.log('='.repeat(60));

  try {
    // 1. ูุญุต ุงููุงุฌูุฉ ุงูุฃูุงููุฉ - ูุง ูุฑุงู ุงููุณุชุฎุฏู
    console.log('๐ฅ๏ธ ูุญุต ูุง ุชุธูุฑู ุงููุงุฌูุฉ ุงูุฃูุงููุฉ:');
    
    // ูุญุต ุฌููุน ุงูุดุฑูุงุช ูุฅุนุฏุงุฏุงุชูุง ููุง ุชุธูุฑ ูููุณุชุฎุฏู
    const companies = await prisma.company.findMany({
      include: {
        facebookPages: true,
        geminiKeys: true,
        aiSettings: true,
        users: true
      }
    });

    companies.forEach((company, index) => {
      console.log(`\n${index + 1}. ุดุฑูุฉ: ${company.name} (${company.id})`);
      console.log(`   ุงููุณุชุฎุฏููู: ${company.users.length}`);
      console.log(`   ุงูุตูุญุงุช: ${company.facebookPages.length}`);
      company.facebookPages.forEach(page => {
        console.log(`     - ${page.pageName} (ูุดุท: ${page.isActive})`);
      });
      console.log(`   ููุงุชูุญ Gemini: ${company.geminiKeys.length}`);
      company.geminiKeys.forEach(key => {
        console.log(`     - ${key.keyName || 'ุจุฏูู ุงุณู'} (ูุดุท: ${key.isActive})`);
      });
      console.log(`   ุฅุนุฏุงุฏุงุช AI: ${company.aiSettings.length}`);
      company.aiSettings.forEach(setting => {
        console.log(`     - AI: ${setting.aiEnabled}, Auto: ${setting.autoResponse}`);
      });
    });

    // 2. ูุญุต ูุนุงูุฌุฉ ุงูู webhooks ุจุงูุชูุตูู
    console.log('\n๐ก ูุญุต ูุนุงูุฌุฉ ุงูู webhooks:');
    
    // ูุญุต ุขุฎุฑ webhook ุชู ุงุณุชูุจุงูู ูุน ุฑุณุงูุฉ ูุนููุฉ
    const lastRealMessage = await prisma.message.findFirst({
      where: {
        isFromCustomer: true,
        content: { not: '' }
      },
      orderBy: { createdAt: 'desc' },
      include: {
        conversation: {
          include: {
            customer: true,
            company: {
              include: {
                facebookPages: true,
                geminiKeys: true,
                aiSettings: true
              }
            }
          }
        }
      }
    });

    if (lastRealMessage) {
      console.log('๐จ ุขุฎุฑ ุฑุณุงูุฉ ุญููููุฉ ูู ุนููู:');
      console.log(`   ุงูุชุงุฑูุฎ: ${lastRealMessage.createdAt}`);
      console.log(`   ุงููุญุชูู: ${lastRealMessage.content.substring(0, 100)}...`);
      console.log(`   ุงูุดุฑูุฉ: ${lastRealMessage.conversation.company.name}`);
      console.log(`   ุงูุนููู: ${lastRealMessage.conversation.customer.facebookId}`);
      
      // ูุญุต ุฅุฐุง ูุงู ููุงู ุฑุฏ ูู ุงูุจูุช
      const botResponse = await prisma.message.findFirst({
        where: {
          conversationId: lastRealMessage.conversationId,
          isFromCustomer: false,
          createdAt: { gt: lastRealMessage.createdAt }
        },
        orderBy: { createdAt: 'asc' }
      });

      console.log(`   ุฑุฏ ุงูุจูุช: ${botResponse ? 'ููุฌูุฏ' : 'ุบูุฑ ููุฌูุฏ โ'}`);
      if (botResponse) {
        console.log(`   ูุญุชูู ุงูุฑุฏ: ${botResponse.content.substring(0, 50)}...`);
      }

      // ูุญุต ุฅุนุฏุงุฏุงุช ุงูุดุฑูุฉ ููุฐู ุงูุฑุณุงูุฉ
      const company = lastRealMessage.conversation.company;
      console.log(`\n๐ง ุฅุนุฏุงุฏุงุช ุงูุดุฑูุฉ ููุฑุณุงูุฉ ุงูุฃุฎูุฑุฉ:`);
      console.log(`   ุงูุตูุญุงุช ุงููุดุทุฉ: ${company.facebookPages.filter(p => p.isActive).length}`);
      console.log(`   ููุงุชูุญ Gemini ุงููุดุทุฉ: ${company.geminiKeys.filter(k => k.isActive).length}`);
      console.log(`   AI ููุนู: ${company.aiSettings.some(s => s.aiEnabled)}`);
      console.log(`   ุงูุงุณุชุฌุงุจุฉ ุงูุชููุงุฆูุฉ: ${company.aiSettings.some(s => s.autoResponse)}`);
    }

    // 3. ูุญุต ุณุฌู ุงูุฃุฎุทุงุก ูุงููุดุงูู
    console.log('\n๐จ ูุญุต ุงูุฃุฎุทุงุก ุงููุญุชููุฉ:');
    
    // ูุญุต ุงูุฑุณุงุฆู ุงูุชู ูู ูุชู ุงูุฑุฏ ุนูููุง
    const unansweredMessages = await prisma.message.findMany({
      where: {
        isFromCustomer: true,
        createdAt: { gte: new Date(Date.now() - 24 * 60 * 60 * 1000) } // ุขุฎุฑ 24 ุณุงุนุฉ
      },
      include: {
        conversation: {
          include: {
            messages: {
              where: { isFromCustomer: false },
              orderBy: { createdAt: 'desc' },
              take: 1
            },
            company: true
          }
        }
      }
    });

    console.log(`๐ ุฑุณุงุฆู ุงูุนููุงุก ูู ุขุฎุฑ 24 ุณุงุนุฉ: ${unansweredMessages.length}`);
    
    let unansweredCount = 0;
    unansweredMessages.forEach(msg => {
      const hasResponse = msg.conversation.messages.length > 0 && 
                         msg.conversation.messages[0].createdAt > msg.createdAt;
      if (!hasResponse) {
        unansweredCount++;
      }
    });

    console.log(`๐ ุฑุณุงุฆู ุจุฏูู ุฑุฏ: ${unansweredCount}`);
    console.log(`๐ ูุนุฏู ุงูุฑุฏ: ${((unansweredMessages.length - unansweredCount) / unansweredMessages.length * 100).toFixed(1)}%`);

    // 4. ูุญุต ุญุงูุฉ ุงูุฎุฏูุงุช
    console.log('\nโ๏ธ ูุญุต ุญุงูุฉ ุงูุฎุฏูุงุช:');
    
    // ูุญุต ุฅุฐุง ูุงู ููุงู ูุดููุฉ ูู ูุนุงูุฌุฉ ุงูุฑุณุงุฆู
    const recentConversations = await prisma.conversation.findMany({
      where: {
        lastMessageAt: { gte: new Date(Date.now() - 60 * 60 * 1000) } // ุขุฎุฑ ุณุงุนุฉ
      },
      include: {
        messages: {
          orderBy: { createdAt: 'desc' },
          take: 5
        },
        company: {
          include: {
            aiSettings: true,
            geminiKeys: true
          }
        }
      }
    });

    console.log(`๐ฌ ูุญุงุฏุซุงุช ูุดุทุฉ ูู ุขุฎุฑ ุณุงุนุฉ: ${recentConversations.length}`);
    
    recentConversations.forEach((conv, index) => {
      const customerMessages = conv.messages.filter(m => m.isFromCustomer);
      const botMessages = conv.messages.filter(m => !m.isFromCustomer);
      
      console.log(`   ${index + 1}. ุงูุดุฑูุฉ: ${conv.company.name}`);
      console.log(`      ุฑุณุงุฆู ุงูุนููู: ${customerMessages.length}`);
      console.log(`      ุฑุณุงุฆู ุงูุจูุช: ${botMessages.length}`);
      console.log(`      AI ููุนู: ${conv.company.aiSettings.some(s => s.aiEnabled)}`);
      console.log(`      ููุงุชูุญ ูุดุทุฉ: ${conv.company.geminiKeys.filter(k => k.isActive).length}`);
    });

    // 5. ูุญุต ูุดููุฉ ูุญุฏุฏุฉ - Swan-store
    console.log('\n๐ฆข ูุญุต Swan-store ุจุงูุชูุตูู:');
    
    const swanPage = await prisma.facebookPage.findFirst({
      where: { pageId: '675323792321557' }
    });

    if (swanPage) {
      // ูุญุต ุขุฎุฑ ุฑุณุงูุฉ ูู Swan-store
      const swanMessages = await prisma.message.findMany({
        where: {
          conversation: {
            companyId: swanPage.companyId
          },
          createdAt: { gte: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) } // ุขุฎุฑ ุฃุณุจูุน
        },
        orderBy: { createdAt: 'desc' },
        take: 10,
        include: {
          conversation: {
            include: { customer: true }
          }
        }
      });

      console.log(`๐จ ุฑุณุงุฆู Swan-store ูู ุขุฎุฑ ุฃุณุจูุน: ${swanMessages.length}`);
      
      const customerMsgs = swanMessages.filter(m => m.isFromCustomer);
      const botMsgs = swanMessages.filter(m => !m.isFromCustomer);
      
      console.log(`   ูู ุงูุนููุงุก: ${customerMsgs.length}`);
      console.log(`   ูู ุงูุจูุช: ${botMsgs.length}`);
      
      if (customerMsgs.length > 0 && botMsgs.length === 0) {
        console.log('   ๐จ ูุดููุฉ ูุคูุฏุฉ: ููุฌุฏ ุฑุณุงุฆู ูู ุงูุนููุงุก ุจุฏูู ุฑุฏูุฏ!');
      }
    }

    // 6. ุงุฎุชุจุงุฑ ูุจุงุดุฑ ูููุธุงู
    console.log('\n๐งช ุงุฎุชุจุงุฑ ูุจุงุดุฑ ูููุธุงู:');
    console.log('   ุณูุชู ุฅุฑุณุงู webhook ุชุฌุฑูุจู...');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงููุญุต ุงูุนููู:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

// ุชุดุบูู ุงููุญุต
deepSystemAnalysis().catch(console.error);
