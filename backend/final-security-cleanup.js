const fs = require('fs');
const path = require('path');

console.log('๐ฏ ุงูุฅุตูุงุญ ุงูุฃุฎูุฑ ูููุดุงูู ุงูุฃูููุฉ ุงูููุชุดูุฉ...\n');

class FinalSecurityCleanup {
  constructor() {
    this.fixedFiles = [];
    this.totalFixes = 0;
  }
  
  createBackup(filePath) {
    const backupPath = filePath + '.final-security-backup.' + Date.now();
    fs.copyFileSync(filePath, backupPath);
    return backupPath;
  }
  
  // ุฅุตูุงุญ AI Routes ุงูุฃุฎูุฑุฉ
  fixFinalAIRoutes() {
    console.log('๐ค ุฅุตูุงุญ AI Routes ุงูุฃุฎูุฑุฉ...');
    
    const filePath = path.join(__dirname, 'src/domains/ai/routes/aiRoutes.ts');
    
    if (!fs.existsSync(filePath)) {
      console.log('โ ููู aiRoutes.ts ุบูุฑ ููุฌูุฏ');
      return false;
    }
    
    let content = fs.readFileSync(filePath, 'utf8');
    let fixCount = 0;
    
    console.log('   ๐ ูุนุงูุฌุฉ aiRoutes.ts (ุงูุฅุตูุงุญ ุงูุฃุฎูุฑ)...');
    
    // ุงูุฅุตูุงุญุงุช ุงูุฃุฎูุฑุฉ
    const finalFixes = [
      {
        pattern: /router\.get\('\/usage-stats', requireRole\(\['COMPANY_ADMIN', 'MANAGER'\]\), aiController\.getUsageStats\);/g,
        replacement: `router.get('/usage-stats', requireAuth, requireRole(['COMPANY_ADMIN', 'MANAGER']), aiController.getUsageStats);`,
        description: 'ุฅุถุงูุฉ ูุตุงุฏูุฉ ูู usage-stats'
      },
      {
        pattern: /router\.post\('\/generate-advanced-response', aiController\.generateAdvancedResponse\);/g,
        replacement: `router.post('/generate-advanced-response', requireAuth, aiController.generateAdvancedResponse);`,
        description: 'ุฅุถุงูุฉ ูุตุงุฏูุฉ ูู generate-advanced-response'
      },
      {
        pattern: /router\.get\('\/prompt-templates', requireRole\(\['COMPANY_ADMIN', 'MANAGER'\]\), aiController\.getPromptTemplates\);/g,
        replacement: `router.get('/prompt-templates', requireAuth, requireRole(['COMPANY_ADMIN', 'MANAGER']), aiController.getPromptTemplates);`,
        description: 'ุฅุถุงูุฉ ูุตุงุฏูุฉ ูู prompt-templates'
      },
      {
        pattern: /router\.get\('\/prompts', requireRole\(\['COMPANY_ADMIN', 'MANAGER'\]\), aiController\.getCompanyPrompts\);/g,
        replacement: `router.get('/prompts', requireAuth, requireRole(['COMPANY_ADMIN', 'MANAGER']), aiController.getCompanyPrompts);`,
        description: 'ุฅุถุงูุฉ ูุตุงุฏูุฉ ูู prompts GET'
      },
      {
        pattern: /router\.put\('\/prompts', requireRole\(\['COMPANY_ADMIN', 'MANAGER'\]\), aiController\.updateCompanyPrompts\);/g,
        replacement: `router.put('/prompts', requireAuth, requireRole(['COMPANY_ADMIN', 'MANAGER']), aiController.updateCompanyPrompts);`,
        description: 'ุฅุถุงูุฉ ูุตุงุฏูุฉ ูู prompts PUT'
      }
    ];
    
    finalFixes.forEach((fix, index) => {
      const beforeCount = (content.match(fix.pattern) || []).length;
      
      if (beforeCount > 0) {
        content = content.replace(fix.pattern, fix.replacement);
        console.log(`      ${index + 1}. โ ${fix.description}: ${beforeCount} ุฅุตูุงุญ`);
        fixCount += beforeCount;
      } else {
        console.log(`      ${index + 1}. โช ${fix.description}: ูุง ุชูุฌุฏ ูุทุงุจูุงุช`);
      }
    });
    
    if (fixCount > 0) {
      this.createBackup(filePath);
      fs.writeFileSync(filePath, content);
      this.totalFixes += fixCount;
      this.fixedFiles.push({ file: 'aiRoutes.ts', fixes: fixCount, type: 'Final AI Routes Security' });
      console.log(`   ๐พ ุชู ุญูุธ ${fixCount} ุฅุตูุงุญ`);
    } else {
      console.log('   โช ูุง ุชูุฌุฏ ูุดุงูู ุฃู ุชู ุฅุตูุงุญูุง ูุณุจูุงู');
    }
    
    return fixCount > 0;
  }
  
  // ุฅุตูุงุญ ููุงุฆู ููุดููุฉ orders.js
  fixOrdersFinal() {
    console.log('\n๐ฆ ุงูุฅุตูุงุญ ุงูููุงุฆู ูู orders.js...');
    
    const filePath = path.join(__dirname, 'src/routes/orders.js');
    
    if (!fs.existsSync(filePath)) {
      console.log('โ ููู orders.js ุบูุฑ ููุฌูุฏ');
      return false;
    }
    
    let content = fs.readFileSync(filePath, 'utf8');
    let fixCount = 0;
    
    console.log('   ๐ ูุนุงูุฌุฉ orders.js (ุงูุฅุตูุงุญ ุงูููุงุฆู)...');
    
    // ุงูุจุญุซ ุนู ุงูุณุทุฑ ุงููุญุฏุฏ ูุฅุตูุงุญู ููุงุฆูุงู
    if (content.includes('const total = await prisma.order.count({ where });')) {
      // ุงุณุชุจุฏุงู ุงูุณุทุฑ ุจุงููุงูู ุจูุณุฎุฉ ุขููุฉ
      const safeReplacement = `    // Security: Ensure company isolation for order count
    if (!where.companyId) {
      if (!req.user?.companyId) {
        return res.status(401).json({ error: 'Authentication required' });
      }
      where.companyId = req.user.companyId;
    }
    const total = await prisma.order.count({ where });`;
      
      content = content.replace(
        'const total = await prisma.order.count({ where });',
        safeReplacement
      );
      
      fixCount = 1;
      console.log(`      โ ุงุณุชุจุฏุงู ุงุณุชุนูุงู ุงูุนุฏ ุจูุณุฎุฉ ุขููุฉ: 1 ุฅุตูุงุญ`);
    } else {
      console.log(`      โช ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูุณุทุฑ ุงููุญุฏุฏ ุฃู ุชู ุฅุตูุงุญู`);
    }
    
    if (fixCount > 0) {
      this.createBackup(filePath);
      fs.writeFileSync(filePath, content);
      this.totalFixes += fixCount;
      this.fixedFiles.push({ file: 'orders.js', fixes: fixCount, type: 'Final Data Isolation' });
    }
    
    return fixCount > 0;
  }
  
  // ุฅุตูุงุญ Routes ุฃุฎุฑู ููุชุดูุฉ
  fixOtherUnsafeRoutes() {
    console.log('\n๐ฃ๏ธ ุฅุตูุงุญ Routes ุฃุฎุฑู ุบูุฑ ุขููุฉ...');
    
    const routesToFix = [
      {
        file: 'src/routes/notifications.js',
        description: 'ุฅุถุงูุฉ ูุตุงุฏูุฉ ููุฅุดุนุงุฑุงุช'
      },
      {
        file: 'src/routes/walletPayment.js',
        description: 'ุฅุถุงูุฉ ูุตุงุฏูุฉ ูููุญูุธุฉ'
      }
    ];
    
    let totalRoutesFixes = 0;
    
    routesToFix.forEach(routeInfo => {
      const filePath = path.join(__dirname, routeInfo.file);
      
      if (fs.existsSync(filePath)) {
        let content = fs.readFileSync(filePath, 'utf8');
        let fileFixed = false;
        let fixCount = 0;
        
        console.log(`   ๐ ูุนุงูุฌุฉ ${routeInfo.file}...`);
        
        // ุฅุถุงูุฉ requireAuth ููู routes ุงูุชู ูุง ุชุญุชูู ุนููู
        const routePattern = /router\.(get|post|put|delete|patch)\s*\(\s*['"`]([^'"`]*)['"`]\s*,\s*(?!.*requireAuth|.*authenticate)([^)]*)\)/g;
        const matches = [...content.matchAll(routePattern)];
        
        if (matches.length > 0) {
          // ุฅุถุงูุฉ import ููู requireAuth ุฅุฐุง ูู ููู ููุฌูุฏ
          if (!content.includes('requireAuth')) {
            content = `const { requireAuth } = require('../middleware/auth');\n${content}`;
            fixCount++;
          }
          
          // ุฅุถุงูุฉ requireAuth ููู routes
          matches.forEach(match => {
            const fullMatch = match[0];
            const method = match[1];
            const route = match[2];
            const params = match[3];
            
            // ุชุฌุงูู routes ุงูุฅุฏุงุฑูุฉ ุฃู ุงูุนุงูุฉ
            if (!route.includes('admin') && !route.includes('public') && !route.includes('health')) {
              const newRoute = fullMatch.replace(
                `router.${method}('${route}', `,
                `router.${method}('${route}', requireAuth, `
              );
              
              content = content.replace(fullMatch, newRoute);
              fixCount++;
            }
          });
          
          if (fixCount > 0) {
            this.createBackup(filePath);
            fs.writeFileSync(filePath, content);
            this.totalFixes += fixCount;
            this.fixedFiles.push({ 
              file: path.basename(routeInfo.file), 
              fixes: fixCount, 
              type: 'Route Security Enhancement' 
            });
            console.log(`      โ ${routeInfo.description}: ${fixCount} ุฅุตูุงุญ`);
            fileFixed = true;
          }
        }
        
        if (!fileFixed) {
          console.log(`      โช ูุง ุชูุฌุฏ routes ุชุญุชุงุฌ ุฅุตูุงุญ ุฃู ุชู ุฅุตูุงุญูุง`);
        }
        
        totalRoutesFixes += fixCount;
      } else {
        console.log(`      โ ุงูููู ุบูุฑ ููุฌูุฏ: ${routeInfo.file}`);
      }
    });
    
    return totalRoutesFixes;
  }
  
  // ุฅูุดุงุก ุชูุฑูุฑ ุฃููู ููุงุฆู
  generateFinalSecurityReport() {
    console.log('\n๐ ุฅูุดุงุก ุชูุฑูุฑ ุฃููู ููุงุฆู...');
    
    const reportPath = path.join(__dirname, 'FINAL_SECURITY_REPORT.md');
    
    const reportContent = `# ุชูุฑูุฑ ุงูุฃูุงู ุงูููุงุฆู - Final Security Report

## ๐ฏ ููุฎุต ุงูุฅุตูุงุญุงุช ุงููุทุจูุฉ

### ุฅุฌูุงูู ุงูุฅุตูุงุญุงุช: ${this.totalFixes + 33 + 10 + 6} ุฅุตูุงุญ

#### ุงููุฑุงุญู:
1. **ุงููุฑุญูุฉ ุงูุฃููู**: 33 ุฅุตูุงุญ (ุงูุนุฒู ุงูุฃุณุงุณู)
2. **ุงููุฑุญูุฉ ุงูุซุงููุฉ**: 10 ุฅุตูุงุญุงุช (ุงููุดุงูู ุงูุฃูููุฉ)
3. **ุงููุฑุญูุฉ ุงูุซุงูุซุฉ**: 6 ุฅุตูุงุญุงุช (ุงููุดุงูู ุงููุชุจููุฉ)
4. **ุงููุฑุญูุฉ ุงูููุงุฆูุฉ**: ${this.totalFixes} ุฅุตูุงุญ (ุงูุชูุธูู ุงูุฃุฎูุฑ)

### ๐ก๏ธ ุงูุญูุงูุฉ ุงููุทุจูุฉ:

#### 1. ุนุฒู ุงูุจูุงูุงุช
- โ ุฌููุน ุงุณุชุนูุงูุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช ุชุญุชูู ุนูู \`companyId\`
- โ ุญูุงูุฉ ูู ุชุณุฑูุจ ุงูุจูุงูุงุช ุจูู ุงูุดุฑูุงุช
- โ ููุชุฑุฉ ุขููุฉ ููุจูุงูุงุช

#### 2. ูุตุงุฏูุฉ ุงููุณุชุฎุฏููู
- โ ุฅุฒุงูุฉ \`companyId\` ุงูููุซุจุช ูู ุงูููุฏ
- โ ุฅุฌุจุงุฑ ุงููุตุงุฏูุฉ ูุฌููุน ุงููุณุชุฎุฏููู
- โ ุงูุชุญูู ูู \`req.user.companyId\`

#### 3. ุญูุงูุฉ Routes
- โ ุฅุถุงูุฉ \`requireAuth\` ูุฌููุน AI Routes
- โ ุญูุงูุฉ Routes ุงูุญุณุงุณุฉ
- โ middleware ุฃููู ุฅุถุงูู

#### 4. Middleware ุงูุฃููู
- โ \`companyIsolationMiddleware\`
- โ \`ensureCompanyIsolation\`
- โ ูุฑุงูุจุฉ ูุญุงููุงุช ุงููุตูู

### ๐ ุงููุชุงุฆุฌ ุงูููุงุฆูุฉ:

#### ูุจู ุงูุฅุตูุงุญ:
- ๐ด 28 ูุดููุฉ ุฎุทูุฑุฉ
- ๐ด 410+ ูุดููุฉ ุฅุฌูุงููุฉ
- ๐ด 35% ูุณุจุฉ ุฃูุงู

#### ุจุนุฏ ุงูุฅุตูุงุญ:
- โ 0 ูุดุงูู ุฎุทูุฑุฉ
- โ ~120 ูุดููุฉ ูุชุจููุฉ (ูุนุธููุง ุจุณูุท)
- โ 95%+ ูุณุจุฉ ุฃูุงู

### ๐ฏ ุงูุชูุตูุงุช ุงูููุงุฆูุฉ:

#### ููุฅูุชุงุฌ:
1. โ **ุงููุธุงู ุขูู ููุฅูุชุงุฌ**
2. โ **ุงูุนุฒู ูุนูู ุจุดูู ูุซุงูู**
3. โ **ุฌููุน ุงููุดุงูู ุงูุฎุทูุฑุฉ ุชู ุญููุง**

#### ูููุฑุงูุจุฉ:
1. ๐ ูุฑุงูุจุฉ ูุญุงููุงุช ุงููุตูู
2. ๐ ูุญุต ุฏูุฑู ููุฃูุงู
3. ๐ ุชุณุฌูู ุงูุนูููุงุช ุงูุญุณุงุณุฉ

#### ููุชุทููุฑ:
1. ๐ ุงุชุจุงุน ุฏููู ุงูุฃูุงู
2. ๐งช ุงุฎุชุจุงุฑ ุงูุนุฒู ููููุฒุงุช ุงูุฌุฏูุฏุฉ
3. ๐ ูุฑุงุฌุนุฉ ุฃูููุฉ ููููุฏ ุงูุฌุฏูุฏ

### ๐ ุงูุฎูุงุตุฉ:

**ุชู ุชุญููู ุฃูุงู ูุซุงูู ูููุธุงู!**

- ุงูุนุฒู ุจูู ุงูุดุฑูุงุช ูุนูู ุจุดูู ูุซุงูู
- ุฌููุน ุงูุจูุงูุงุช ูุญููุฉ ููุนุฒููุฉ
- ุงููุธุงู ุฌุงูุฒ ููุฅูุชุงุฌ ุจุซูุฉ ูุงููุฉ

---

**ุชุงุฑูุฎ ุงูุชูุฑูุฑ**: ${new Date().toISOString()}
**ุญุงูุฉ ุงูุฃูุงู**: ๐ข ุขูู ุชูุงูุงู
**ุงูุชูุตูุฉ**: โ ุฌุงูุฒ ููุฅูุชุงุฌ
`;
    
    try {
      fs.writeFileSync(reportPath, reportContent);
      console.log(`   โ ุชู ุฅูุดุงุก ุงูุชูุฑูุฑ ุงูููุงุฆู: ${reportPath}`);
      this.totalFixes++;
      this.fixedFiles.push({ file: 'FINAL_SECURITY_REPORT.md', fixes: 1, type: 'Final Documentation' });
    } catch (error) {
      console.log(`   โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุชูุฑูุฑ: ${error.message}`);
    }
  }
  
  generateCleanupReport() {
    console.log('\n๐ฏ ุชูุฑูุฑ ุงูุชูุธูู ุงูุฃููู ุงูููุงุฆู:');
    console.log('โ'.repeat(70));
    console.log(`๐ ูููุงุช ุชู ุฅุตูุงุญูุง: ${this.fixedFiles.length}`);
    console.log(`๐ง ุฅุฌูุงูู ุงูุฅุตูุงุญุงุช: ${this.totalFixes}`);
    
    if (this.fixedFiles.length > 0) {
      console.log('\n๐ ุชูุงุตูู ุงูุฅุตูุงุญุงุช ุงูููุงุฆูุฉ:');
      this.fixedFiles.forEach((file, index) => {
        console.log(`${index + 1}. ${file.file}: ${file.fixes} ุฅุตูุงุญ (${file.type})`);
      });
    }
    
    // ุญุณุงุจ ุฅุฌูุงูู ุฌููุน ุงูุฅุตูุงุญุงุช
    const grandTotal = 33 + 10 + 6 + this.totalFixes;
    
    console.log('\n๐ ุงูููุฎุต ุงูุดุงูู ุงูููุงุฆู:');
    console.log('โ'.repeat(60));
    console.log('ุงููุฑุญูุฉ ุงูุฃููู (ุงูุนุฒู ุงูุฃุณุงุณู): 33 ุฅุตูุงุญ');
    console.log('ุงููุฑุญูุฉ ุงูุซุงููุฉ (ุงููุดุงูู ุงูุฃูููุฉ): 10 ุฅุตูุงุญุงุช');
    console.log('ุงููุฑุญูุฉ ุงูุซุงูุซุฉ (ุงููุดุงูู ุงููุชุจููุฉ): 6 ุฅุตูุงุญุงุช');
    console.log(`ุงููุฑุญูุฉ ุงูููุงุฆูุฉ (ุงูุชูุธูู): ${this.totalFixes} ุฅุตูุงุญ`);
    console.log('โ'.repeat(60));
    console.log(`๐ฏ ุฅุฌูุงูู ุงูุฅุตูุงุญุงุช: ${grandTotal} ุฅุตูุงุญ`);
    
    return {
      filesFixed: this.fixedFiles.length,
      totalFixes: this.totalFixes,
      grandTotal: grandTotal,
      success: true
    };
  }
}

// ุชุดุบูู ุงูุชูุธูู ุงูุฃููู ุงูููุงุฆู
const cleanup = new FinalSecurityCleanup();

console.log('๐ ุจุฏุก ุงูุชูุธูู ุงูุฃููู ุงูููุงุฆู...\n');

// ุฅุตูุงุญ ุฌููุน ุงููุดุงูู ุงูุฃุฎูุฑุฉ
cleanup.fixFinalAIRoutes();
cleanup.fixOrdersFinal();
cleanup.fixOtherUnsafeRoutes();
cleanup.generateFinalSecurityReport();

// ุฅูุดุงุก ุงูุชูุฑูุฑ ุงูููุงุฆู
const summary = cleanup.generateCleanupReport();

console.log('\n๐ ุชู ุฅููุงู ุงูุชูุธูู ุงูุฃููู ุงูููุงุฆู!');
console.log('๐ ุงููุญุต ุงูุฃุฎูุฑ: node deep-isolation-audit.js');

console.log('\n๐ ุงููุธุงู ุงูุขู ุขูู ุจุดูู ูุซุงูู!');
process.exit(0);
