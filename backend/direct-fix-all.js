/**
 * ุฅุตูุงุญ ูุจุงุดุฑ ูุฌููุน ุงููุดุงูู
 */

const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function directFixAll() {
  console.log('๐ง ุฅุตูุงุญ ูุจุงุดุฑ ูุฌููุน ุงููุดุงูู...');
  console.log('='.repeat(50));

  try {
    // 1. ุฅุตูุงุญ ุตูุญุงุช ููุณุจูู ูุจุงุดุฑุฉ
    console.log('1๏ธโฃ ุฅุตูุงุญ ุตูุญุงุช ููุณุจูู...');
    
    const pages = await prisma.facebookPage.findMany();
    for (const page of pages) {
      // ุงุณุชุฎุฏุงู raw SQL ูุชุญุฏูุซ isActive
      await prisma.$executeRaw`
        UPDATE facebook_pages 
        SET isActive = TRUE 
        WHERE id = ${page.id}
      `;
      console.log(`โ ุชู ุชูุนูู ุตูุญุฉ: ${page.pageName}`);
    }

    // 2. ุฅุตูุงุญ ุฅุนุฏุงุฏุงุช AI ูุจุงุดุฑุฉ
    console.log('\n2๏ธโฃ ุฅุตูุงุญ ุฅุนุฏุงุฏุงุช AI...');
    
    const companies = await prisma.company.findMany();
    
    for (const company of companies) {
      // ุญุฐู ุฅุนุฏุงุฏุงุช AI ุงููุฏููุฉ ุฅู ูุฌุฏุช
      await prisma.aiSettings.deleteMany({
        where: { companyId: company.id }
      });
      
      // ุฅูุดุงุก ุฅุนุฏุงุฏุงุช AI ุฌุฏูุฏุฉ ุตุญูุญุฉ
      await prisma.aiSettings.create({
        data: {
          companyId: company.id,
          autoReplyEnabled: true,
          workingHoursEnabled: true,
          maxRepliesPerCustomer: 10,
          multimodalEnabled: true,
          ragEnabled: true,
          confidenceThreshold: 0.7,
          workingHours: JSON.stringify({ start: '09:00', end: '18:00' })
        }
      });
      
      // ุฅุถุงูุฉ ุงูุญููู ุงูููููุฏุฉ ุจุงุณุชุฎุฏุงู raw SQL
      await prisma.$executeRaw`
        UPDATE ai_settings 
        SET aiEnabled = TRUE, autoResponse = TRUE 
        WHERE companyId = ${company.id}
      `;
      
      console.log(`โ ุชู ุฅุตูุงุญ ุฅุนุฏุงุฏุงุช AI ููุดุฑูุฉ: ${company.name}`);
    }

    // 3. ุงุฎุชุจุงุฑ ููุงุฆู
    console.log('\n3๏ธโฃ ุงุฎุชุจุงุฑ ููุงุฆู...');
    
    const testCompanies = await prisma.company.findMany({
      include: {
        facebookPages: true,
        geminiKeys: true,
        aiSettings: true
      }
    });

    console.log('\n๐ ุงููุชุงุฆุฌ ุงูููุงุฆูุฉ:');
    console.log('='.repeat(40));

    let healthyCount = 0;
    
    for (const company of testCompanies) {
      console.log(`\n๐ข ${company.name}:`);
      
      // ูุญุต ุงูุดุฑูุฉ
      console.log(`   ุงูุดุฑูุฉ ูุดุทุฉ: ${company.isActive ? 'โ' : 'โ'}`);
      
      // ูุญุต ุตูุญุงุช ููุณุจูู
      let pagesOk = true;
      if (company.facebookPages.length > 0) {
        // ูุญุต ูุจุงุดุฑ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        const activePagesCount = await prisma.$queryRaw`
          SELECT COUNT(*) as count 
          FROM facebook_pages 
          WHERE companyId = ${company.id} AND isActive = TRUE
        `;
        const activeCount = Number(activePagesCount[0].count);
        pagesOk = activeCount > 0;
        console.log(`   ุตูุญุงุช ููุณุจูู: ${activeCount}/${company.facebookPages.length} ูุดุทุฉ ${pagesOk ? 'โ' : 'โ'}`);
      } else {
        console.log(`   ุตูุญุงุช ููุณุจูู: ูุง ุชูุฌุฏ ุตูุญุงุช โ`);
      }
      
      // ูุญุต ููุงุชูุญ Gemini
      const activeKeys = company.geminiKeys.filter(k => k.isActive === true);
      const keysOk = activeKeys.length > 0;
      console.log(`   ููุงุชูุญ Gemini: ${activeKeys.length}/${company.geminiKeys.length} ูุดุทุฉ ${keysOk ? 'โ' : 'โ'}`);
      
      // ูุญุต ุฅุนุฏุงุฏุงุช AI
      const aiOk = company.aiSettings && company.aiSettings.length > 0 && 
                   company.aiSettings[0].autoReplyEnabled === true;
      console.log(`   ุฅุนุฏุงุฏุงุช AI: ${aiOk ? 'ููุนูุฉ โ' : 'ูุนุทูุฉ โ'}`);
      
      // ุงูุญุงูุฉ ุงูุนุงูุฉ
      const isHealthy = company.isActive && pagesOk && keysOk && aiOk;
      console.log(`   ๐ฏ ุงูุญุงูุฉ: ${isHealthy ? 'โ ุตุญูุฉ' : 'โ ุชุญุชุงุฌ ูุฑุงุฌุนุฉ'}`);
      
      if (isHealthy) healthyCount++;
    }

    console.log('\n๐ฏ ุงูููุฎุต ุงูููุงุฆู:');
    console.log(`๐ ุฅุฌูุงูู ุงูุดุฑูุงุช: ${testCompanies.length}`);
    console.log(`โ ุดุฑูุงุช ุตุญูุฉ: ${healthyCount}`);
    console.log(`โ ุดุฑูุงุช ุชุญุชุงุฌ ูุฑุงุฌุนุฉ: ${testCompanies.length - healthyCount}`);
    console.log(`๐ ูุนุฏู ุงููุฌุงุญ: ${((healthyCount/testCompanies.length)*100).toFixed(1)}%`);

    // 4. ุงุฎุชุจุงุฑ ุฎุงุต ูู Swan-store
    console.log('\n๐ฆข ุงุฎุชุจุงุฑ Swan-store:');
    
    const swanCheck = await prisma.$queryRaw`
      SELECT 
        fp.pageName,
        fp.isActive as pageActive,
        c.isActive as companyActive,
        c.name as companyName
      FROM facebook_pages fp
      JOIN companies c ON fp.companyId = c.id
      WHERE fp.pageId = '675323792321557'
    `;

    if (swanCheck.length > 0) {
      const swan = swanCheck[0];
      console.log(`   ุตูุญุฉ: ${swan.pageName}`);
      console.log(`   ุงูุดุฑูุฉ: ${swan.companyName}`);
      console.log(`   ุตูุญุฉ ูุดุทุฉ: ${swan.pageActive ? 'โ' : 'โ'}`);
      console.log(`   ุดุฑูุฉ ูุดุทุฉ: ${swan.companyActive ? 'โ' : 'โ'}`);
      
      const swanReady = swan.pageActive && swan.companyActive;
      console.log(`   ๐ฏ ุฌุงูุฒุฉ ููุฑุฏ: ${swanReady ? 'โ ูุนู' : 'โ ูุง'}`);
      
      if (swanReady) {
        console.log('\n๐ Swan-store ุฌุงูุฒุฉ ุงูุขู ููุฑุฏ ุนูู ุงูุฑุณุงุฆู!');
      }
    }

    if (healthyCount === testCompanies.length) {
      console.log('\n๐ ุชู ุฅุตูุงุญ ุฌููุน ุงูุดุฑูุงุช ุจูุฌุงุญ!');
      console.log('๐ ุงูุขู ุฌููุน ุงูุดุฑูุงุช ุณุชุนูู ูุชุฑุฏ ุนูู ุงูุฑุณุงุฆู!');
    }

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุฅุตูุงุญ ุงููุจุงุดุฑ:', error.message);
    console.error(error.stack);
  } finally {
    await prisma.$disconnect();
  }
}

// ุชุดุบูู ุงูุฅุตูุงุญ ุงููุจุงุดุฑ
directFixAll().catch(console.error);
