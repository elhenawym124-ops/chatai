// ูุญุงูุงุฉ ุฎุทุฃ ุตุงูุช ูู ุงููุธุงู
const fetch = require('node-fetch');

async function simulateSilentError() {
  console.log('๐งช ูุญุงูุงุฉ ุฎุทุฃ ุตุงูุช ูู ุงููุธุงู...\n');

  try {
    // ูุญุงูุงุฉ ุฑุณุงูุฉ ูู ุนููู ุชุณุจุจ ุฎุทุฃ ุตุงูุช
    const response = await fetch('http://localhost:3001/webhook/facebook', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Hub-Signature-256': 'sha256=test' // ุชูููุน ูููู
      },
      body: JSON.stringify({
        object: 'page',
        entry: [{
          id: 'test-page-silent-error',
          time: Date.now(),
          messaging: [{
            sender: { id: 'test-customer-silent-123' },
            recipient: { id: 'test-page-silent-error' },
            timestamp: Date.now(),
            message: {
              mid: 'test-message-silent-error',
              text: 'ุงุฎุชุจุงุฑ ุฎุทุฃ ุตุงูุช - ูุฐู ุงูุฑุณุงูุฉ ุณุชุณุจุจ ุฎุทุฃ ุตุงูุช'
            }
          }]
        }]
      })
    });

    console.log('๐ค ุชู ุฅุฑุณุงู ุงูุฑุณุงูุฉ ููู webhook');
    console.log('๐ ุญุงูุฉ ุงูุฑุฏ:', response.status);
    
    if (response.ok) {
      console.log('โ ุชู ูุนุงูุฌุฉ ุงูุฑุณุงูุฉ');
    } else {
      console.log('โ ุฎุทุฃ ูู ูุนุงูุฌุฉ ุงูุฑุณุงูุฉ');
    }

    // ุงูุชุธุงุฑ ูููู ููุณูุงุญ ูููุธุงู ุจูุนุงูุฌุฉ ุงูุฑุณุงูุฉ
    console.log('\nโณ ุงูุชุธุงุฑ ูุนุงูุฌุฉ ุงููุธุงู...');
    await new Promise(resolve => setTimeout(resolve, 3000));

    // ุงูุชุญูู ูู ุงูุฅุดุนุงุฑุงุช
    console.log('\n๐ ุงูุชุญูู ูู ุงูุฅุดุนุงุฑุงุช...');
    await checkNotifications();

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงููุญุงูุงุฉ:', error.message);
  }
}

async function checkNotifications() {
  try {
    // ูุญุงููุฉ ุฌูุจ ุงูุฅุดุนุงุฑุงุช (ุจุฏูู token ููุงุฎุชุจุงุฑ)
    const response = await fetch('http://localhost:3001/api/v1/notifications/recent');
    
    if (response.ok) {
      const data = await response.json();
      console.log('๐ ุงูุฅุดุนุงุฑุงุช:', data);
    } else {
      console.log('๐ ุฑุฏ ุงูุฅุดุนุงุฑุงุช:', response.status);
      const text = await response.text();
      console.log('๐ ูุญุชูู ุงูุฑุฏ:', text);
    }
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฌูุจ ุงูุฅุดุนุงุฑุงุช:', error.message);
  }
}

// ุชุดุบูู ุงููุญุงูุงุฉ
simulateSilentError();
