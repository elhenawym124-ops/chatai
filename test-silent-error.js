const { simpleMonitor } = require('./backend/src/services/simpleMonitor');

console.log('๐งช ุงุฎุชุจุงุฑ ุงููุธุงู ุงูุตุงูุช ููุฃุฎุทุงุก...\n');

// ูุญุงูุงุฉ ุฎุทุฃ ุตุงูุช
async function testSilentError() {
  console.log('1๏ธโฃ ุงุฎุชุจุงุฑ ุฎุทุฃ ุตุงูุช...');
  
  const error = new Error('No active Gemini key found for company: test-company');
  const context = {
    silent: true,
    errorType: 'quota_exceeded',
    customerId: 'test-customer-123',
    companyId: 'test-company-456',
    timestamp: new Date().toISOString()
  };

  try {
    await simpleMonitor.logError(error, context);
    console.log('โ ุชู ุชุณุฌูู ุงูุฎุทุฃ ุงูุตุงูุช ุจูุฌุงุญ');
  } catch (err) {
    console.error('โ ูุดู ูู ุชุณุฌูู ุงูุฎุทุฃ:', err.message);
  }
}

// ูุญุงูุงุฉ ุฎุทุฃ ุนุงุฏู
async function testNormalError() {
  console.log('\n2๏ธโฃ ุงุฎุชุจุงุฑ ุฎุทุฃ ุนุงุฏู...');
  
  const error = new Error('Database connection failed');
  const context = {
    silent: false,
    errorType: 'database_error',
    customerId: 'customer-789',
    companyId: 'company-123',
    timestamp: new Date().toISOString()
  };

  try {
    await simpleMonitor.logError(error, context);
    console.log('โ ุชู ุชุณุฌูู ุงูุฎุทุฃ ุงูุนุงุฏู ุจูุฌุงุญ');
  } catch (err) {
    console.error('โ ูุดู ูู ุชุณุฌูู ุงูุฎุทุฃ:', err.message);
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช
async function runTests() {
  try {
    await testSilentError();
    await testNormalError();
    
    console.log('\n๐ฏ ูุชุงุฆุฌ ุงูุงุฎุชุจุงุฑ:');
    console.log('โ ุงููุธุงู ุงูุตุงูุช ูุนูู ุจุดูู ุตุญูุญ');
    console.log('๐ ุชุญูู ูู ููุญุฉ ุงููุฑุงูุจุฉ ูุฑุคูุฉ ุงูุฅุดุนุงุฑุงุช');
    console.log('๐ ุชุญูู ูู ุงูุฌุฑุณ ูู ุงููุงุฌูุฉ');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ:', error.message);
  }
}

runTests();
