// ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฅุดุนุงุฑ ุตุงูุช ูุจุงุดุฑุฉ
const fetch = require('node-fetch');

async function testSilentNotification() {
  console.log('๐งช ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฅุดุนุงุฑ ุตุงูุช...\n');

  try {
    // ุฅูุดุงุก ุฅุดุนุงุฑ ุตุงูุช ูุจุงุดุฑุฉ
    const response = await fetch('http://localhost:3001/api/v1/notifications/create', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer test-token' // ุณูุญุชุงุฌ token ุตุญูุญ
      },
      body: JSON.stringify({
        type: 'error',
        title: '๐ค ุงุฎุชุจุงุฑ ุฎุทุฃ ุตุงูุช ูุจุงุดุฑ',
        message: 'ูุฐุง ุฎุทุฃ ุตุงูุช ุชู ุฅูุดุงุคู ููุงุฎุชุจุงุฑ - ุงูุนููู ูุง ูุฑุงู',
        metadata: {
          silent: true,
          errorType: 'test_direct_silent_error',
          customerId: 'test-customer-direct-123',
          source: 'direct_test_system',
          timestamp: new Date().toISOString()
        }
      })
    });

    if (response.ok) {
      const data = await response.json();
      console.log('โ ุชู ุฅูุดุงุก ุงูุฅุดุนุงุฑ ุงูุตุงูุช ุจูุฌุงุญ!');
      console.log('๐ ุงูุจูุงูุงุช:', data);
    } else {
      console.log('โ ูุดู ูู ุฅูุดุงุก ุงูุฅุดุนุงุฑ:', response.status);
      const errorText = await response.text();
      console.log('๐ ุงูุฑุฏ:', errorText);
    }

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ:', error.message);
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
testSilentNotification();
